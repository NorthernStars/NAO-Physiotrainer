<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="84.0896">
                        <Box name="Leg Lift" id="1" localization="8" tooltip="" x="352" y="401">
                            <bitmap>media/images/box/movement/move_leg.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Bein hoch" id="8" localization="8" tooltip="" x="370" y="136">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="80">
                                                    <ActuatorList model="nao">
                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="-9.05525" />
                                                            <Key frame="80" value="-9.93417" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="1.14019" />
                                                            <Key frame="80" value="1.14019" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="-9.49471" />
                                                            <Key frame="80" value="7.3805" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="2.37549" />
                                                            <Key frame="80" value="-6.76526" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="-57.303" />
                                                            <Key frame="80" value="-57.303" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="-62.3176" />
                                                            <Key frame="80" value="-62.9329" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="0" mute="0" unit="1">
                                                            <Key frame="30" value="0.3084" />
                                                            <Key frame="80" value="0.3084" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="3.34228" />
                                                            <Key frame="80" value="-71.5415" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="-0.876518" />
                                                            <Key frame="80" value="0.353968" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="-13.6208" />
                                                            <Key frame="80" value="-10.8962" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="14.2361" />
                                                            <Key frame="80" value="78.8365" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="38.8457" />
                                                            <Key frame="80" value="40.8672" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="34.0117" />
                                                            <Key frame="80" value="33.5722" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="23.4647" />
                                                            <Key frame="80" value="23.4647" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="5.53958" />
                                                            <Key frame="80" value="5.3638" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="7.56109" />
                                                            <Key frame="80" value="7.56109" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="5.53958" />
                                                            <Key frame="80" value="2" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="25.4862" />
                                                            <Key frame="80" value="60.7308" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="0" mute="0" unit="1">
                                                            <Key frame="30" value="0.3152" />
                                                            <Key frame="80" value="0.3152" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="7.46839" />
                                                            <Key frame="80" value="7.3805" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="-5.71056" />
                                                            <Key frame="80" value="-5.71056" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipYawPitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="-13.6208" />
                                                            <Key frame="80" value="-10.8962" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="-5.00743" />
                                                            <Key frame="80" value="-5.00743" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="87.0152" />
                                                            <Key frame="80" value="-90.614" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="-9.49471" />
                                                            <Key frame="80" value="-5.62747" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="0" mute="0" unit="0">
                                                            <Key frame="30" value="5.44688" />
                                                            <Key frame="80" value="20.74" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="Say" id="9" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="207" y="134">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                </Box>
                                                                <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Stell dich neben einem Stuhl und stütze dich mit einem Arm auf dem Stuhl ab. Jetzt hebe das Bein am Stuhl und den Arm auf der anderen Seite. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <chinese>
                                                                            <![CDATA[你好]]>
</chinese>
                                                                        <english>
                                                                            <![CDATA[Hello]]>
</english>
                                                                        <french>
                                                                            <![CDATA[Bonjour]]>
</french>
                                                                        <german>
                                                                            <![CDATA[Stell dich neben einem Stuhl und stütze dich mit einem Arm auf dem Stuhl ab. Jetzt hebe das Bein am Stuhl und den Arm auf der anderen Seite.]]>
</german>
                                                                        <italian>
                                                                            <![CDATA[Ciao]]>
</italian>
                                                                        <japanese>
                                                                            <![CDATA[こんにちは]]>
</japanese>
                                                                        <korean>
                                                                            <![CDATA[안녕하세요]]>
</korean>
                                                                        <portuguese>
                                                                            <![CDATA[Olá]]>
</portuguese>
                                                                        <brazilian>
                                                                            <![CDATA[Olá]]>
</brazilian>
                                                                        <spanish>
                                                                            <![CDATA[Hola]]>
</spanish>
                                                                        <arabic>
                                                                            <![CDATA[مرحبا]]>
</arabic>
                                                                        <polish>
                                                                            <![CDATA[Cześć]]>
</polish>
                                                                        <czech>
                                                                            <![CDATA[Ahoj]]>
</czech>
                                                                        <dutch>
                                                                            <![CDATA[Hallo]]>
</dutch>
                                                                        <danish>
                                                                            <![CDATA[Hej]]>
</danish>
                                                                        <finnish>
                                                                            <![CDATA[Hei]]>
</finnish>
                                                                        <swedish>
                                                                            <![CDATA[Hallå]]>
</swedish>
                                                                        <russian>
                                                                            <![CDATA[Привет]]>
</russian>
                                                                        <turkish>
                                                                            <![CDATA[Merhaba]]>
</turkish>
                                                                        <language>3</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="Speech" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="8" indexofinput="2" outputowner="9" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Warm Up" id="8" localization="8" tooltip="" x="496" y="181">
                            <bitmap>media/images/box/movement/move_arm.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram scale="70.7107">
                                            <Box name="Step 1" id="17" localization="8" tooltip="" x="178" y="232">
                                                <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="RArm front" id="2" localization="8" tooltip="" x="152" y="163">
                                                                    <bitmap>media/images/box/movement/move_arm.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="30">
                                                                        <ActuatorList model="nao">
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-2.98591" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-19.1628" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="0" mute="0" unit="1">
                                                                                <Key frame="30" value="0.956" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="112.323" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="16.3455" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="8.61098" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="2.11181" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="19.3338" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="0" mute="0" unit="1">
                                                                                <Key frame="30" value="0.9532" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="26.8094" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-11.5162" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-9.14314" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-20.3054" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="0.0902951" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-19.5975" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-0.0854867" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-0.261268" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="41.8341" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-20.3006" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="0.266077" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-19.8659" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-0.524941" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipYawPitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-0.261268" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="41.5752" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Move Head" id="4" localization="8" tooltip="" x="142" y="31">
                                                                    <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram scale="84.0896">
                                                                                    <Box name="Head left" id="12" localization="8" tooltip="" x="617" y="276">
                                                                                        <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="30">
                                                                                            <ActuatorList model="nao">
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="0" mute="0" unit="0">
                                                                                                    <Key frame="30" value="-0.00240423" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="0" mute="0" unit="0">
                                                                                                    <Key frame="30" value="68.2016" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="If" id="1" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="242" y="67">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onData(self, p):
        param = self.getParameter("Value to compare")
        try:
            p = float(p)
            param = float(param)
        except:
            p = str(p)
            param = str(param)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( p < param )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( p <= param )
        elif( operator == "=" ):
            self.outputTrueOrFalse( p == param )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( p >= param )
        elif( operator == ">" ):
            self.outputTrueOrFalse( p > param )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( p != param )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.output_then()
        else:
            self.output_else()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onData" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                                                                                        <Output name="output_then" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="3" />
                                                                                        <Output name="output_else" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="4" />
                                                                                        <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="≠" default_value="≠" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="5">
                                                                                            <Choice value="&lt;" />
                                                                                            <Choice value="&lt; or =" />
                                                                                            <Choice value="=" />
                                                                                            <Choice value="&gt; or =" />
                                                                                            <Choice value="&gt;" />
                                                                                            <Choice value="≠" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Value to compare" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="This is the value which is compared to the input value." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Get Use Head" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="86" y="65">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_use_head" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Head left light" id="3" localization="8" tooltip="" x="598" y="33">
                                                                                        <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="30">
                                                                                            <ActuatorList model="nao">
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="0" mute="0" unit="0">
                                                                                                    <Key frame="30" value="-1.93602" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="0" mute="0" unit="0">
                                                                                                    <Key frame="30" value="10.8962" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Get Repeatings" id="6" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="174" y="297">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_count" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="If (1)" id="2" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="334" y="290">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onData(self, p):
        param = self.getParameter("Value to compare")
        try:
            p = float(p)
            param = float(param)
        except:
            p = str(p)
            param = str(param)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( p < param )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( p <= param )
        elif( operator == "=" ):
            self.outputTrueOrFalse( p == param )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( p >= param )
        elif( operator == ">" ):
            self.outputTrueOrFalse( p > param )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( p != param )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.output_then()
        else:
            self.output_else()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onData" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                                                                                        <Output name="output_then" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="3" />
                                                                                        <Output name="output_else" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="4" />
                                                                                        <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="&gt; or =" default_value="≠" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="5">
                                                                                            <Choice value="&lt;" />
                                                                                            <Choice value="&lt; or =" />
                                                                                            <Choice value="=" />
                                                                                            <Choice value="&gt; or =" />
                                                                                            <Choice value="&gt;" />
                                                                                            <Choice value="≠" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Value to compare" inherits_from_parent="0" content_type="3" value="5" default_value="0" custom_choice="0" tooltip="This is the value which is compared to the input value." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Get Head First Time" id="4" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="187" y="448">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_use_head_first_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Explanation" id="5" localization="8" tooltip="Explanation what the user should do." x="515" y="446">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                                                            <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            #self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                                            <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Wir nehmen den Kopf dazu. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>
                                                                                                                    <![CDATA[你好]]>
</chinese>
                                                                                                                <english>
                                                                                                                    <![CDATA[Hello]]>
</english>
                                                                                                                <french>
                                                                                                                    <![CDATA[Bonjour]]>
</french>
                                                                                                                <german>
                                                                                                                    <![CDATA[Wir nehmen den Kopf dazu.]]>
</german>
                                                                                                                <italian>
                                                                                                                    <![CDATA[Ciao]]>
</italian>
                                                                                                                <japanese>
                                                                                                                    <![CDATA[こんにちは]]>
</japanese>
                                                                                                                <korean>
                                                                                                                    <![CDATA[안녕하세요]]>
</korean>
                                                                                                                <portuguese>
                                                                                                                    <![CDATA[Olá]]>
</portuguese>
                                                                                                                <brazilian>
                                                                                                                    <![CDATA[Olá]]>
</brazilian>
                                                                                                                <spanish>
                                                                                                                    <![CDATA[Hola]]>
</spanish>
                                                                                                                <arabic>
                                                                                                                    <![CDATA[مرحبا]]>
</arabic>
                                                                                                                <polish>
                                                                                                                    <![CDATA[Cześć]]>
</polish>
                                                                                                                <czech>
                                                                                                                    <![CDATA[Ahoj]]>
</czech>
                                                                                                                <dutch>
                                                                                                                    <![CDATA[Hallo]]>
</dutch>
                                                                                                                <danish>
                                                                                                                    <![CDATA[Hej]]>
</danish>
                                                                                                                <finnish>
                                                                                                                    <![CDATA[Hei]]>
</finnish>
                                                                                                                <swedish>
                                                                                                                    <![CDATA[Hallå]]>
</swedish>
                                                                                                                <russian>
                                                                                                                    <![CDATA[Привет]]>
</russian>
                                                                                                                <turkish>
                                                                                                                    <![CDATA[Merhaba]]>
</turkish>
                                                                                                                <language>3</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                        <Resource name="Speech" type="Lock" timeout="0" />
                                                                                    </Box>
                                                                                    <Box name="If (2)" id="8" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="333" y="451">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onData(self, p):
        param = self.getParameter("Value to compare")
        try:
            p = float(p)
            param = float(param)
        except:
            p = str(p)
            param = str(param)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( p < param )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( p <= param )
        elif( operator == "=" ):
            self.outputTrueOrFalse( p == param )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( p >= param )
        elif( operator == ">" ):
            self.outputTrueOrFalse( p > param )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( p != param )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.output_then()
        else:
            self.output_else()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onData" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                                                                                        <Output name="output_then" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="3" />
                                                                                        <Output name="output_else" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="4" />
                                                                                        <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="&lt;" default_value="≠" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="5">
                                                                                            <Choice value="&lt;" />
                                                                                            <Choice value="&lt; or =" />
                                                                                            <Choice value="=" />
                                                                                            <Choice value="&gt; or =" />
                                                                                            <Choice value="&gt;" />
                                                                                            <Choice value="≠" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Value to compare" inherits_from_parent="0" content_type="3" value="1" default_value="0" custom_choice="0" tooltip="This is the value which is compared to the input value." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Set Head First Time" id="9" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="679" y="591">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_use_head_first_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Number Edit" id="10" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="503" y="598">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(1)]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <number>1</number>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="12" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="12" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                    <Link inputowner="8" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="8" indexofoutput="3" />
                                                                                    <Link inputowner="10" indexofinput="2" outputowner="8" indexofoutput="3" />
                                                                                    <Link inputowner="9" indexofinput="2" outputowner="10" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="Step 2" id="2" localization="8" tooltip="" x="184" y="435">
                                                <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="LArm front" id="8" localization="8" tooltip="" x="211" y="177">
                                                                    <bitmap>media/images/box/movement/move_leftarm.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="30">
                                                                        <ActuatorList model="nao">
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-2.98591" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-81.8296" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="0" mute="0" unit="1">
                                                                                <Key frame="30" value="0.0848" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="50.0959" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="13.7087" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-12.7467" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="4.48488" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="81.5611" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="0" mute="0" unit="1">
                                                                                <Key frame="30" value="0.0112" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="111.098" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-11.692" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-11.8678" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-20.3054" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="0.0902951" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-25.2225" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-0.0854867" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-0.261268" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="44.6466" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-20.3006" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="0.266077" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-25.4031" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-0.524941" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipYawPitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="-0.261268" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="30" value="45.1788" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Move Head" id="4" localization="8" tooltip="" x="198" y="45">
                                                                    <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram scale="84.0896">
                                                                                    <Box name="If" id="1" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="242" y="67">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onData(self, p):
        param = self.getParameter("Value to compare")
        try:
            p = float(p)
            param = float(param)
        except:
            p = str(p)
            param = str(param)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( p < param )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( p <= param )
        elif( operator == "=" ):
            self.outputTrueOrFalse( p == param )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( p >= param )
        elif( operator == ">" ):
            self.outputTrueOrFalse( p > param )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( p != param )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.output_then()
        else:
            self.output_else()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onData" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                                                                                        <Output name="output_then" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="3" />
                                                                                        <Output name="output_else" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="4" />
                                                                                        <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="≠" default_value="≠" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="5">
                                                                                            <Choice value="&lt;" />
                                                                                            <Choice value="&lt; or =" />
                                                                                            <Choice value="=" />
                                                                                            <Choice value="&gt; or =" />
                                                                                            <Choice value="&gt;" />
                                                                                            <Choice value="≠" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Value to compare" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="This is the value which is compared to the input value." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Get Use Head" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="86" y="65">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_use_head" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Get Repeatings" id="6" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="174" y="297">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_count" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="If (1)" id="2" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="334" y="290">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onData(self, p):
        param = self.getParameter("Value to compare")
        try:
            p = float(p)
            param = float(param)
        except:
            p = str(p)
            param = str(param)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( p < param )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( p <= param )
        elif( operator == "=" ):
            self.outputTrueOrFalse( p == param )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( p >= param )
        elif( operator == ">" ):
            self.outputTrueOrFalse( p > param )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( p != param )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.output_then()
        else:
            self.output_else()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onData" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                                                                                        <Output name="output_then" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="3" />
                                                                                        <Output name="output_else" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="4" />
                                                                                        <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="&gt; or =" default_value="≠" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="5">
                                                                                            <Choice value="&lt;" />
                                                                                            <Choice value="&lt; or =" />
                                                                                            <Choice value="=" />
                                                                                            <Choice value="&gt; or =" />
                                                                                            <Choice value="&gt;" />
                                                                                            <Choice value="≠" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Value to compare" inherits_from_parent="0" content_type="3" value="5" default_value="0" custom_choice="0" tooltip="This is the value which is compared to the input value." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Head right" id="11" localization="8" tooltip="" x="565" y="295">
                                                                                        <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="30">
                                                                                            <ActuatorList model="nao">
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="0" mute="0" unit="0">
                                                                                                    <Key frame="30" value="-0.00240423" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="0" mute="0" unit="0">
                                                                                                    <Key frame="30" value="-69.0853" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Head right light" id="4" localization="8" tooltip="" x="559" y="41">
                                                                                        <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="30">
                                                                                            <ActuatorList model="nao">
                                                                                                <ActuatorCurve name="value" actuator="HeadPitch" recordable="0" mute="0" unit="0">
                                                                                                    <Key frame="30" value="-1.93602" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="HeadYaw" recordable="0" mute="0" unit="0">
                                                                                                    <Key frame="30" value="-11.6041" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="4" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="11" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="8" indexofoutput="4" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="Init" id="12" localization="8" tooltip="" x="236" y="28">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onFailed" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram scale="84.0896">
                                                                <Box name="Init knee stand" id="5" localization="8" tooltip="" x="579" y="245">
                                                                    <bitmap>media/images/box/movement/setRobotPosture.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40">
                                                                        <ActuatorList model="">
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="-6.94585" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="-0.793436" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="-23.2937" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="-2.72224" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="-23.1131" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="-68.2064" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="0.3084" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="-14.5876" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="4.66066" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="-3.60116" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="37.5274" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="79.2759" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="11.5114" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="4.56796" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="-22.0584" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="3.43018" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="23.5574" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="65.8285" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="0.3152" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="-12.3073" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="-1.0523" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipYawPitch" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="-3.60116" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="34.456" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="82.2691" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="-11.7799" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="0" mute="0" unit="-1">
                                                                                <Key frame="40" value="1.66754" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Intro New" id="6" localization="8" tooltip="Introduction text for users new to this exercise." x="431" y="183">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram scale="141.421">
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="595" y="203">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="251" y="52">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Wir wollen in dieser Übung unseren Oberkörper aufwärmen. Dazu werden wir unsere Arme hin und her schwingen. Stell dich dazu hin und schau dass du nach hinten und nach vorne genug Platz hast. Geh dann leicht in die Knie. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Wir wollen in dieser Übung unseren Oberkörper aufwärmen. Dazu werden wir unsere Arme hin und her schwingen. Stell dich dazu hin und schau dass du nach hinten und nach vorne genug Platz hast. Geh dann leicht in die Knie.]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Random3" id="1" localization="8" tooltip="" x="80" y="156">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        i = random.randint(1, 3)
        if i == 1:
            self.output1()
        elif i == 2:
            self.output2()
        else:
            self.output3()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.output1() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="output1" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Output name="output2" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                                        <Output name="output3" type="1" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text (1)" id="3" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="254" y="215">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Um unseren Oberkörper aufzuwärmen, schauen wir dass wir genug Platz nach vorne und nachhHinten haben. Dann gehen wir leicht in die Knie und schwingen die Arme. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Um unseren Oberkörper aufzuwärmen, schauen wir dass wir genug Platz nach vorne und nachhHinten haben. Dann gehen wir leicht in die Knie und schwingen die Arme.]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text (2)" id="4" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="251" y="380">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Stell sicher dass du genug Platz nach vorne und nach hinten hast. Geh leicht in die Knie und schwing deine Arme um deinen Oberkörper aufzuwärmen. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Stell sicher dass du genug Platz nach vorne und nach hinten hast. Geh leicht in die Knie und schwing deine Arme um deinen Oberkörper aufzuwärmen.]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="6" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Explanation" id="7" localization="8" tooltip="Explanation what the user should do." x="724" y="234">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="411" y="69">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Jetzt die Arme schwingen lassen. Einen Arm nach hinten, einen Arm nach vorne. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Jetzt die Arme schwingen lassen. Einen Arm nach hinten, einen Arm nach vorne.]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Data Speech" id="1" localization="8" tooltip="Explanation what the user should do." x="450" y="273">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                                                            <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        self.data = None
        self.text = None

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.text = str(p)
        if self.data and self.text:
            self.say()

    def say(self):
        self.bIsRunning = True
        self.text = self.text.replace("%n", str(self.data))
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(self.text)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_data(self, data):
        self.data = data
        if self.data and self.text:
            self.say()

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="data" type="0" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="4" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                                                                            <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="6" />
                                                                                                            <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="97" y="148">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Wir machen %n Wiederholungen. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>
                                                                                                                    <![CDATA[你好]]>
</chinese>
                                                                                                                <english>
                                                                                                                    <![CDATA[Hello]]>
</english>
                                                                                                                <french>
                                                                                                                    <![CDATA[Bonjour]]>
</french>
                                                                                                                <german>
                                                                                                                    <![CDATA[Wir machen %n Wiederholungen.]]>
</german>
                                                                                                                <italian>
                                                                                                                    <![CDATA[Ciao]]>
</italian>
                                                                                                                <japanese>
                                                                                                                    <![CDATA[こんにちは]]>
</japanese>
                                                                                                                <korean>
                                                                                                                    <![CDATA[안녕하세요]]>
</korean>
                                                                                                                <portuguese>
                                                                                                                    <![CDATA[Olá]]>
</portuguese>
                                                                                                                <brazilian>
                                                                                                                    <![CDATA[Olá]]>
</brazilian>
                                                                                                                <spanish>
                                                                                                                    <![CDATA[Hola]]>
</spanish>
                                                                                                                <arabic>
                                                                                                                    <![CDATA[مرحبا]]>
</arabic>
                                                                                                                <polish>
                                                                                                                    <![CDATA[Cześć]]>
</polish>
                                                                                                                <czech>
                                                                                                                    <![CDATA[Ahoj]]>
</czech>
                                                                                                                <dutch>
                                                                                                                    <![CDATA[Hallo]]>
</dutch>
                                                                                                                <danish>
                                                                                                                    <![CDATA[Hej]]>
</danish>
                                                                                                                <finnish>
                                                                                                                    <![CDATA[Hei]]>
</finnish>
                                                                                                                <swedish>
                                                                                                                    <![CDATA[Hallå]]>
</swedish>
                                                                                                                <russian>
                                                                                                                    <![CDATA[Привет]]>
</russian>
                                                                                                                <turkish>
                                                                                                                    <![CDATA[Merhaba]]>
</turkish>
                                                                                                                <language>3</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                                        <Link inputowner="2" indexofinput="3" outputowner="0" indexofoutput="2" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                        <Resource name="Speech" type="Lock" timeout="0" />
                                                                                    </Box>
                                                                                    <Box name="Get Max Repeatings" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="250" y="274">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="10" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="If" id="1" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="267" y="264">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onData(self, p):
        param = self.getParameter("Value to compare")
        try:
            p = float(p)
            param = float(param)
        except:
            p = str(p)
            param = str(param)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( p < param )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( p <= param )
        elif( operator == "=" ):
            self.outputTrueOrFalse( p == param )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( p >= param )
        elif( operator == ">" ):
            self.outputTrueOrFalse( p > param )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( p != param )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.output_then()
        else:
            self.output_else()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onData" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                                                                    <Output name="output_then" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="3" />
                                                                    <Output name="output_else" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="4" />
                                                                    <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="≠" default_value="≠" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="5">
                                                                        <Choice value="&lt;" />
                                                                        <Choice value="&lt; or =" />
                                                                        <Choice value="=" />
                                                                        <Choice value="&gt; or =" />
                                                                        <Choice value="&gt;" />
                                                                        <Choice value="≠" />
                                                                    </Parameter>
                                                                    <Parameter name="Value to compare" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="This is the value which is compared to the input value." id="6" />
                                                                </Box>
                                                                <Box name="Intro" id="4" localization="8" tooltip="Introduction text for users." x="436" y="300">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram scale="84.0896">
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="626" y="242">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="192" y="50">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Wir wollen jetzt unseren Oberkörper aufwärmen und gehen dazu wieder leicht in die Knie. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Wir wollen jetzt unseren Oberkörper aufwärmen und gehen dazu wieder leicht in die Knie.]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Random3" id="1" localization="8" tooltip="" x="58" y="221">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        i = random.randint(1, 3)
        if i == 1:
            self.output1()
        elif i == 2:
            self.output2()
        else:
            self.output3()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.output1() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="output1" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Output name="output2" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                                        <Output name="output3" type="1" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text (1)" id="3" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="202" y="215">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Wir gehen leicht in die Knie um uns aufzuwärmen. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Wir gehen leicht in die Knie um uns aufzuwärmen.]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text (2)" id="4" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="197" y="394">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Jetzt wollen wir unseren Oberkörper aufwärmen und gehen leicht in die Knie. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Jetzt wollen wir unseren Oberkörper aufwärmen und gehen leicht in die Knie.]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="6" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Stand Up" id="9" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="105" y="52">
                                                                    <bitmap>media/images/box/movement/stand.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="4" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="5" />
                                                                    <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="StandUpBehavior">
                                                                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                                        <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                                            <Choice value="Crouch" />
                                                                                            <Choice value="LyingBack" />
                                                                                            <Choice value="LyingBelly" />
                                                                                            <Choice value="Sit" />
                                                                                            <Choice value="SitRelax" />
                                                                                            <Choice value="StandInit" />
                                                                                            <Choice value="Stand" />
                                                                                            <Choice value="StandZero" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                                        <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                                                        <Resource name="All motors" type="Lock" timeout="0" />
                                                                                        <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                                    </Box>
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="StandUp Failure" id="10" localization="8" tooltip="Failure text for failed stand up." x="426" y="28">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Ich konnte nicht aufstehen und kann dir diese Übung daher leider nicht vormachen. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Ich konnte nicht aufstehen und kann dir diese Übung daher leider nicht vormachen.]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Get New User" id="11" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="105" y="256">
                                                                    <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_new_user" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                    <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                        <Choice value="string" />
                                                                        <Choice value="integer" />
                                                                        <Choice value="float" />
                                                                        <Choice value="boolean" />
                                                                    </Parameter>
                                                                    <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                </Box>
                                                                <Box name="Initi Data" id="2" localization="8" tooltip="" x="264" y="104">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Set Repeatings" id="5" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="298" y="74">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_count" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Number Edit" id="2" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="105" y="77">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <number>0</number>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Set Head First Time" id="9" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="301" y="206">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_use_head_first_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Number Edit (1)" id="10" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="86" y="213">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <number>0</number>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Set Hold Time" id="11" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="316" y="327">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Number Edit (2)" id="12" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="100" y="334">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <number>0</number>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="9" indexofinput="2" outputowner="10" indexofoutput="3" />
                                                                                    <Link inputowner="11" indexofinput="2" outputowner="12" indexofoutput="3" />
                                                                                    <Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="12" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                <Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="10" indexofoutput="4" />
                                                                <Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="7" indexofoutput="4" />
                                                                <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="5" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="9" indexofoutput="5" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="Hold Step 1" id="1" localization="8" tooltip="" x="361" y="230">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Random" id="1" localization="8" tooltip="" x="127" y="74">
                                                                    <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.onStopped( random.randint(self.getParameter("Min"), self.getParameter("Max")) )

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(p) #activate the output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Parameter name="Min" inherits_from_parent="0" content_type="1" value="0" default_value="0" min="0" max="999999" tooltip="" id="5" />
                                                                    <Parameter name="Max" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="999999" tooltip="" id="6" />
                                                                </Box>
                                                                <Box name="If" id="3" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="285" y="71">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onData(self, p):
        param = self.getParameter("Value to compare")
        try:
            p = float(p)
            param = float(param)
        except:
            p = str(p)
            param = str(param)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( p < param )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( p <= param )
        elif( operator == "=" ):
            self.outputTrueOrFalse( p == param )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( p >= param )
        elif( operator == ">" ):
            self.outputTrueOrFalse( p > param )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( p != param )
        elif( operator == "%10" ):
            self.outputTrueOrFalse( p % self.getParameter("modulo") == param )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.output_then()
        else:
            self.output_else()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onData" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                                                                    <Output name="output_then" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="3" />
                                                                    <Output name="output_else" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="4" />
                                                                    <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="&lt; or =" default_value="%10" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="5">
                                                                        <Choice value="&lt;" />
                                                                        <Choice value="&lt; or =" />
                                                                        <Choice value="=" />
                                                                        <Choice value="&gt; or =" />
                                                                        <Choice value="&gt;" />
                                                                        <Choice value="≠" />
                                                                        <Choice value="%10" />
                                                                    </Parameter>
                                                                    <Parameter name="Value to compare" inherits_from_parent="0" content_type="3" value="10" default_value="0" custom_choice="0" tooltip="This is the value which is compared to the input value." id="6" />
                                                                    <Parameter name="modulo" inherits_from_parent="0" content_type="1" value="10" default_value="10" min="0" max="999999" tooltip="" id="7" />
                                                                </Box>
                                                                <Box name="Hold Arms" id="7" localization="8" tooltip="" x="620" y="239">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram scale="84.0896">
                                                                                    <Box name="Speech" id="2" localization="8" tooltip="Introduction text for users." x="282" y="110">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram scale="100">
                                                                                                        <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="626" y="242">
                                                                                                            <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                                            <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="192" y="50">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " und wir halten die Position. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>
                                                                                                                    <![CDATA[你好]]>
</chinese>
                                                                                                                <english>
                                                                                                                    <![CDATA[Hello]]>
</english>
                                                                                                                <french>
                                                                                                                    <![CDATA[Bonjour]]>
</french>
                                                                                                                <german>
                                                                                                                    <![CDATA[und wir halten die Position.]]>
</german>
                                                                                                                <italian>
                                                                                                                    <![CDATA[Ciao]]>
</italian>
                                                                                                                <japanese>
                                                                                                                    <![CDATA[こんにちは]]>
</japanese>
                                                                                                                <korean>
                                                                                                                    <![CDATA[안녕하세요]]>
</korean>
                                                                                                                <portuguese>
                                                                                                                    <![CDATA[Olá]]>
</portuguese>
                                                                                                                <brazilian>
                                                                                                                    <![CDATA[Olá]]>
</brazilian>
                                                                                                                <spanish>
                                                                                                                    <![CDATA[Hola]]>
</spanish>
                                                                                                                <arabic>
                                                                                                                    <![CDATA[مرحبا]]>
</arabic>
                                                                                                                <polish>
                                                                                                                    <![CDATA[Cześć]]>
</polish>
                                                                                                                <czech>
                                                                                                                    <![CDATA[Ahoj]]>
</czech>
                                                                                                                <dutch>
                                                                                                                    <![CDATA[Hallo]]>
</dutch>
                                                                                                                <danish>
                                                                                                                    <![CDATA[Hej]]>
</danish>
                                                                                                                <finnish>
                                                                                                                    <![CDATA[Hei]]>
</finnish>
                                                                                                                <swedish>
                                                                                                                    <![CDATA[Hallå]]>
</swedish>
                                                                                                                <russian>
                                                                                                                    <![CDATA[Привет]]>
</russian>
                                                                                                                <turkish>
                                                                                                                    <![CDATA[Merhaba]]>
</turkish>
                                                                                                                <language>3</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Random3" id="1" localization="8" tooltip="" x="58" y="221">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        i = random.randint(1, 3)
        if i == 1:
            self.output1()
        elif i == 2:
            self.output2()
        else:
            self.output3()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.output1() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="output1" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Output name="output2" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                                                            <Output name="output3" type="1" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text (1)" id="3" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="202" y="215">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Wir halten die Position für einen Moment. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>
                                                                                                                    <![CDATA[你好]]>
</chinese>
                                                                                                                <english>
                                                                                                                    <![CDATA[Hello]]>
</english>
                                                                                                                <french>
                                                                                                                    <![CDATA[Bonjour]]>
</french>
                                                                                                                <german>
                                                                                                                    <![CDATA[Wir halten die Position für einen Moment.]]>
</german>
                                                                                                                <italian>
                                                                                                                    <![CDATA[Ciao]]>
</italian>
                                                                                                                <japanese>
                                                                                                                    <![CDATA[こんにちは]]>
</japanese>
                                                                                                                <korean>
                                                                                                                    <![CDATA[안녕하세요]]>
</korean>
                                                                                                                <portuguese>
                                                                                                                    <![CDATA[Olá]]>
</portuguese>
                                                                                                                <brazilian>
                                                                                                                    <![CDATA[Olá]]>
</brazilian>
                                                                                                                <spanish>
                                                                                                                    <![CDATA[Hola]]>
</spanish>
                                                                                                                <arabic>
                                                                                                                    <![CDATA[مرحبا]]>
</arabic>
                                                                                                                <polish>
                                                                                                                    <![CDATA[Cześć]]>
</polish>
                                                                                                                <czech>
                                                                                                                    <![CDATA[Ahoj]]>
</czech>
                                                                                                                <dutch>
                                                                                                                    <![CDATA[Hallo]]>
</dutch>
                                                                                                                <danish>
                                                                                                                    <![CDATA[Hej]]>
</danish>
                                                                                                                <finnish>
                                                                                                                    <![CDATA[Hei]]>
</finnish>
                                                                                                                <swedish>
                                                                                                                    <![CDATA[Hallå]]>
</swedish>
                                                                                                                <russian>
                                                                                                                    <![CDATA[Привет]]>
</russian>
                                                                                                                <turkish>
                                                                                                                    <![CDATA[Merhaba]]>
</turkish>
                                                                                                                <language>3</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text (2)" id="4" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="197" y="394">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Wir halten unsere Arme in der Position. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>
                                                                                                                    <![CDATA[你好]]>
</chinese>
                                                                                                                <english>
                                                                                                                    <![CDATA[Hello]]>
</english>
                                                                                                                <french>
                                                                                                                    <![CDATA[Bonjour]]>
</french>
                                                                                                                <german>
                                                                                                                    <![CDATA[Wir halten unsere Arme in der Position.]]>
</german>
                                                                                                                <italian>
                                                                                                                    <![CDATA[Ciao]]>
</italian>
                                                                                                                <japanese>
                                                                                                                    <![CDATA[こんにちは]]>
</japanese>
                                                                                                                <korean>
                                                                                                                    <![CDATA[안녕하세요]]>
</korean>
                                                                                                                <portuguese>
                                                                                                                    <![CDATA[Olá]]>
</portuguese>
                                                                                                                <brazilian>
                                                                                                                    <![CDATA[Olá]]>
</brazilian>
                                                                                                                <spanish>
                                                                                                                    <![CDATA[Hola]]>
</spanish>
                                                                                                                <arabic>
                                                                                                                    <![CDATA[مرحبا]]>
</arabic>
                                                                                                                <polish>
                                                                                                                    <![CDATA[Cześć]]>
</polish>
                                                                                                                <czech>
                                                                                                                    <![CDATA[Ahoj]]>
</czech>
                                                                                                                <dutch>
                                                                                                                    <![CDATA[Hallo]]>
</dutch>
                                                                                                                <danish>
                                                                                                                    <![CDATA[Hej]]>
</danish>
                                                                                                                <finnish>
                                                                                                                    <![CDATA[Hei]]>
</finnish>
                                                                                                                <swedish>
                                                                                                                    <![CDATA[Hallå]]>
</swedish>
                                                                                                                <russian>
                                                                                                                    <![CDATA[Привет]]>
</russian>
                                                                                                                <turkish>
                                                                                                                    <![CDATA[Merhaba]]>
</turkish>
                                                                                                                <language>3</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="6" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                        <Resource name="Speech" type="Lock" timeout="0" />
                                                                                    </Box>
                                                                                    <Box name="Wait" id="3" localization="8" tooltip="" x="497" y="103">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Get Hold Time" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="271" y="75">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Set Hold Time" id="1" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="591" y="77">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Increment" id="4" localization="8" tooltip="Increments or decrements a value" x="431" y="76">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, p):
        try:
            p = int(p)
        except:
            self.logger.warn("Cannot cast " + str(p) + " to integer.")
            p = 0

        if self.getParameter("Increment"):
            p += self.getParameter("Step")
        else:
            p -= self.getParameter("Step")

        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(p) #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Increment" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="If selected number is incremented. Otherwise decremented." id="5" />
                                                                                                            <Parameter name="Step" inherits_from_parent="0" content_type="1" value="1" default_value="1" min="0" max="999999" tooltip="Number about the input should be in- or decremented." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Wait" id="5" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="114" y="71">
                                                                                                            <bitmap>media/images/box/wait.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                                                                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                                                                                                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                                                                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Block Data" id="3" localization="8" tooltip="Blocks data transmitted from previous blocks." x="745" y="76">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.onStopped() #activate the output of the box
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="3" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Get Hold Time" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="128" y="422">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Compare" id="1" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="290" y="474">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.a = None
        self.b = None

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_a(self, a):
        self.a = a
        if self.a != None and self.b != None:
            self.result(self.a, self.b)

    def onInput_b(self, b):
        self.b = b
        if self.a != None and self.b != None:
            self.result(self.a, self.b)

    def result(self, a, b):
        try:
            a = float(a)
            b = float(b)
        except:
            a = str(a)
            b = str(b)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( a < b )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( a <= b )
        elif( operator == "=" ):
            self.outputTrueOrFalse( a == b )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( a >= b )
        elif( operator == ">" ):
            self.outputTrueOrFalse( a > b )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( a != b )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.true()
        else:
            self.false()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="a" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                                                                                        <Input name="b" type="0" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                        <Output name="true" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="4" />
                                                                                        <Output name="false" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="5" />
                                                                                        <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="&gt; or =" default_value="≠" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="6">
                                                                                            <Choice value="&lt;" />
                                                                                            <Choice value="&lt; or =" />
                                                                                            <Choice value="=" />
                                                                                            <Choice value="&gt; or =" />
                                                                                            <Choice value="&gt;" />
                                                                                            <Choice value="≠" />
                                                                                        </Parameter>
                                                                                    </Box>
                                                                                    <Box name="Get Max Hold Time" id="4" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="135" y="553">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="3" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Data Speech" id="6" localization="8" tooltip="Explanation what the user should do." x="618" y="513">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="568" y="39">
                                                                                                            <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        self.data = None
        self.text = None

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.text = str(p)
        if self.data and self.text:
            self.say()

    def say(self):
        self.bIsRunning = True
        self.text = self.text.replace("%n", str(self.data))
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(self.text)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_data(self, data):
        self.data = data
        if self.data and self.text:
            self.say()

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="data" type="0" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="4" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                                                                            <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="6" />
                                                                                                            <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text (1)" id="3" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="186" y="118">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " %n ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>
                                                                                                                    <![CDATA[你好]]>
</chinese>
                                                                                                                <english>
                                                                                                                    <![CDATA[Hello]]>
</english>
                                                                                                                <french>
                                                                                                                    <![CDATA[Bonjour]]>
</french>
                                                                                                                <german>
                                                                                                                    <![CDATA[%n]]>
</german>
                                                                                                                <italian>
                                                                                                                    <![CDATA[Ciao]]>
</italian>
                                                                                                                <japanese>
                                                                                                                    <![CDATA[こんにちは]]>
</japanese>
                                                                                                                <korean>
                                                                                                                    <![CDATA[안녕하세요]]>
</korean>
                                                                                                                <portuguese>
                                                                                                                    <![CDATA[Olá]]>
</portuguese>
                                                                                                                <brazilian>
                                                                                                                    <![CDATA[Olá]]>
</brazilian>
                                                                                                                <spanish>
                                                                                                                    <![CDATA[Hola]]>
</spanish>
                                                                                                                <arabic>
                                                                                                                    <![CDATA[مرحبا]]>
</arabic>
                                                                                                                <polish>
                                                                                                                    <![CDATA[Cześć]]>
</polish>
                                                                                                                <czech>
                                                                                                                    <![CDATA[Ahoj]]>
</czech>
                                                                                                                <dutch>
                                                                                                                    <![CDATA[Hallo]]>
</dutch>
                                                                                                                <danish>
                                                                                                                    <![CDATA[Hej]]>
</danish>
                                                                                                                <finnish>
                                                                                                                    <![CDATA[Hei]]>
</finnish>
                                                                                                                <swedish>
                                                                                                                    <![CDATA[Hallå]]>
</swedish>
                                                                                                                <russian>
                                                                                                                    <![CDATA[Привет]]>
</russian>
                                                                                                                <turkish>
                                                                                                                    <![CDATA[Merhaba]]>
</turkish>
                                                                                                                <language>3</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" />
                                                                                                        <Link inputowner="2" indexofinput="3" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                        <Resource name="Speech" type="Lock" timeout="0" />
                                                                                    </Box>
                                                                                    <Box name="Speech (1)" id="8" localization="8" tooltip="Introduction text for users." x="902" y="86">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram scale="100">
                                                                                                        <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="626" y="242">
                                                                                                            <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                                            <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="192" y="50">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Weiter gehts. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>
                                                                                                                    <![CDATA[你好]]>
</chinese>
                                                                                                                <english>
                                                                                                                    <![CDATA[Hello]]>
</english>
                                                                                                                <french>
                                                                                                                    <![CDATA[Bonjour]]>
</french>
                                                                                                                <german>
                                                                                                                    <![CDATA[Weiter gehts.]]>
</german>
                                                                                                                <italian>
                                                                                                                    <![CDATA[Ciao]]>
</italian>
                                                                                                                <japanese>
                                                                                                                    <![CDATA[こんにちは]]>
</japanese>
                                                                                                                <korean>
                                                                                                                    <![CDATA[안녕하세요]]>
</korean>
                                                                                                                <portuguese>
                                                                                                                    <![CDATA[Olá]]>
</portuguese>
                                                                                                                <brazilian>
                                                                                                                    <![CDATA[Olá]]>
</brazilian>
                                                                                                                <spanish>
                                                                                                                    <![CDATA[Hola]]>
</spanish>
                                                                                                                <arabic>
                                                                                                                    <![CDATA[مرحبا]]>
</arabic>
                                                                                                                <polish>
                                                                                                                    <![CDATA[Cześć]]>
</polish>
                                                                                                                <czech>
                                                                                                                    <![CDATA[Ahoj]]>
</czech>
                                                                                                                <dutch>
                                                                                                                    <![CDATA[Hallo]]>
</dutch>
                                                                                                                <danish>
                                                                                                                    <![CDATA[Hej]]>
</danish>
                                                                                                                <finnish>
                                                                                                                    <![CDATA[Hei]]>
</finnish>
                                                                                                                <swedish>
                                                                                                                    <![CDATA[Hallå]]>
</swedish>
                                                                                                                <russian>
                                                                                                                    <![CDATA[Привет]]>
</russian>
                                                                                                                <turkish>
                                                                                                                    <![CDATA[Merhaba]]>
</turkish>
                                                                                                                <language>3</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Random3" id="1" localization="8" tooltip="" x="58" y="221">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        i = random.randint(1, 3)
        if i == 1:
            self.output1()
        elif i == 2:
            self.output2()
        else:
            self.output3()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.output1() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="output1" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Output name="output2" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                                                            <Output name="output3" type="1" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text (1)" id="3" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="202" y="215">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Und weiter. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>
                                                                                                                    <![CDATA[你好]]>
</chinese>
                                                                                                                <english>
                                                                                                                    <![CDATA[Hello]]>
</english>
                                                                                                                <french>
                                                                                                                    <![CDATA[Bonjour]]>
</french>
                                                                                                                <german>
                                                                                                                    <![CDATA[Und weiter.]]>
</german>
                                                                                                                <italian>
                                                                                                                    <![CDATA[Ciao]]>
</italian>
                                                                                                                <japanese>
                                                                                                                    <![CDATA[こんにちは]]>
</japanese>
                                                                                                                <korean>
                                                                                                                    <![CDATA[안녕하세요]]>
</korean>
                                                                                                                <portuguese>
                                                                                                                    <![CDATA[Olá]]>
</portuguese>
                                                                                                                <brazilian>
                                                                                                                    <![CDATA[Olá]]>
</brazilian>
                                                                                                                <spanish>
                                                                                                                    <![CDATA[Hola]]>
</spanish>
                                                                                                                <arabic>
                                                                                                                    <![CDATA[مرحبا]]>
</arabic>
                                                                                                                <polish>
                                                                                                                    <![CDATA[Cześć]]>
</polish>
                                                                                                                <czech>
                                                                                                                    <![CDATA[Ahoj]]>
</czech>
                                                                                                                <dutch>
                                                                                                                    <![CDATA[Hallo]]>
</dutch>
                                                                                                                <danish>
                                                                                                                    <![CDATA[Hej]]>
</danish>
                                                                                                                <finnish>
                                                                                                                    <![CDATA[Hei]]>
</finnish>
                                                                                                                <swedish>
                                                                                                                    <![CDATA[Hallå]]>
</swedish>
                                                                                                                <russian>
                                                                                                                    <![CDATA[Привет]]>
</russian>
                                                                                                                <turkish>
                                                                                                                    <![CDATA[Merhaba]]>
</turkish>
                                                                                                                <language>3</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text (2)" id="4" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="197" y="394">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Weiter die Arme schwingen. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>
                                                                                                                    <![CDATA[你好]]>
</chinese>
                                                                                                                <english>
                                                                                                                    <![CDATA[Hello]]>
</english>
                                                                                                                <french>
                                                                                                                    <![CDATA[Bonjour]]>
</french>
                                                                                                                <german>
                                                                                                                    <![CDATA[Weiter die Arme schwingen.]]>
</german>
                                                                                                                <italian>
                                                                                                                    <![CDATA[Ciao]]>
</italian>
                                                                                                                <japanese>
                                                                                                                    <![CDATA[こんにちは]]>
</japanese>
                                                                                                                <korean>
                                                                                                                    <![CDATA[안녕하세요]]>
</korean>
                                                                                                                <portuguese>
                                                                                                                    <![CDATA[Olá]]>
</portuguese>
                                                                                                                <brazilian>
                                                                                                                    <![CDATA[Olá]]>
</brazilian>
                                                                                                                <spanish>
                                                                                                                    <![CDATA[Hola]]>
</spanish>
                                                                                                                <arabic>
                                                                                                                    <![CDATA[مرحبا]]>
</arabic>
                                                                                                                <polish>
                                                                                                                    <![CDATA[Cześć]]>
</polish>
                                                                                                                <czech>
                                                                                                                    <![CDATA[Ahoj]]>
</czech>
                                                                                                                <dutch>
                                                                                                                    <![CDATA[Hallo]]>
</dutch>
                                                                                                                <danish>
                                                                                                                    <![CDATA[Hej]]>
</danish>
                                                                                                                <finnish>
                                                                                                                    <![CDATA[Hei]]>
</finnish>
                                                                                                                <swedish>
                                                                                                                    <![CDATA[Hallå]]>
</swedish>
                                                                                                                <russian>
                                                                                                                    <![CDATA[Привет]]>
</russian>
                                                                                                                <turkish>
                                                                                                                    <![CDATA[Merhaba]]>
</turkish>
                                                                                                                <language>3</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="6" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                        <Resource name="Speech" type="Lock" timeout="0" />
                                                                                    </Box>
                                                                                    <Box name="Update Data" id="9" localization="8" tooltip="" x="764" y="243">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Set Hold Time" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="357" y="62">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Get Max Hold Time" id="4" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="71" y="192">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="3" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Number Edit" id="1" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="100" y="75">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <number>0</number>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                                                                            <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Set Max Hold Time" id="2" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="384" y="199">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="3" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Wait For Signals" id="3" localization="8" tooltip="Wait for both inputs to be stimulated before stimulating its output." x="635" y="109">
                                                                                                            <bitmap>media/images/box/wait.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ok = [False]*2

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onStart(self, nInput):
        self.ok[nInput-1] = True
        bOutput = True
        for bOk in self.ok:
            bOutput = bOutput and bOk
        if( bOutput ):
            self.ok = [False]*2
            self.signalsReceived()

    def onInput_signal1(self):
        self.onStart(1)

    def onInput_signal2(self):
        self.onStart(2)]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="signal1" type="1" type_size="1" nature="1" inner="0" tooltip="First signal to wait." id="2" />
                                                                                                            <Input name="signal2" type="1" type_size="1" nature="1" inner="0" tooltip="Second signal to wait." id="3" />
                                                                                                            <Output name="signalsReceived" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when both inputs have been stimulated." id="4" />
                                                                                                        </Box>
                                                                                                        <Box name="Increment" id="5" localization="8" tooltip="Increments or decrements a value" x="226" y="198">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, p):
        try:
            p = int(p)
        except:
            self.logger.warn("Cannot cast " + str(p) + " to integer.")
            p = 0

        if self.getParameter("Increment"):
            p += self.getParameter("Step")
        else:
            p -= self.getParameter("Step")

        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(p) #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Increment" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="If selected number is incremented. Otherwise decremented." id="5" />
                                                                                                            <Parameter name="Step" inherits_from_parent="0" content_type="1" value="1" default_value="1" min="0" max="999999" tooltip="Number about the input should be in- or decremented." id="6" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="3" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Get Difference" id="12" localization="8" tooltip="" x="474" y="522">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Get Hold Time" id="5" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="157" y="192">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Get Max Hold Time" id="10" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="153" y="68">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="3" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Get Difference" id="11" localization="8" tooltip="" x="310" y="134">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        self.a = None
        self.b = None

    def onUnload(self):
        self.a = None
        self.b = None

    def onInput_a(self, p):
        self.a = p
        if self.a != None  and self.b != None:
            x = self.a - self.b
            self.a = None
            self.b = None
            self.onStopped( x )

    def onInput_b(self, p):
        self.b = p
        if self.a != None  and self.b != None:
            x = self.a - self.b
            self.a = None
            self.b = None
            self.onStopped( x )

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="a" type="2" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="b" type="2" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" />
                                                                                                            <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="11" indexofinput="2" outputowner="10" indexofoutput="4" />
                                                                                                        <Link inputowner="11" indexofinput="3" outputowner="5" indexofoutput="4" />
                                                                                                        <Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="11" indexofoutput="5" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Init Data" id="5" localization="8" tooltip="" x="101" y="114">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Set Hold Time" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="380" y="74">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Number Edit" id="1" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="123" y="87">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <number>0</number>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                                                                            <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Block Data" id="3" localization="8" tooltip="Blocks data transmitted from previous blocks." x="538" y="73">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.onStopped() #activate the output of the box
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="3" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="3" outputowner="4" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="9" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="8" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="8" indexofoutput="4" />
                                                                                    <Link inputowner="12" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="12" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Get Remaining Repeatings" id="2" localization="8" tooltip="" x="129" y="253">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Get Repeatings" id="6" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="124" y="178">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_count" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Get Max Repeatings" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="115" y="40">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="10" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Get Difference" id="1" localization="8" tooltip="" x="288" y="100">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        self.a = None
        self.b = None

    def onUnload(self):
        self.a = None
        self.b = None

    def onInput_a(self, p):
        self.a = p
        if self.a != None  and self.b != None:
            self.onStopped( self.a - self.b )

    def onInput_b(self, p):
        self.b = p
        if self.a != None  and self.b != None:
            self.onStopped( self.a - self.b )

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(p) #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="a" type="2" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="b" type="2" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="3" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="5" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="If (1)" id="4" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="285" y="242">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onData(self, p):
        param = self.getParameter("Value to compare")
        try:
            p = float(p)
            param = float(param)
        except:
            p = str(p)
            param = str(param)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( p < param )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( p <= param )
        elif( operator == "=" ):
            self.outputTrueOrFalse( p == param )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( p >= param )
        elif( operator == ">" ):
            self.outputTrueOrFalse( p > param )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( p != param )
        elif( operator == "%10" ):
            self.outputTrueOrFalse( p % self.getParameter("modulo") == param )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.output_then()
        else:
            self.output_else()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onData" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                                                                    <Output name="output_then" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="3" />
                                                                    <Output name="output_else" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="4" />
                                                                    <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="&gt;" default_value="%10" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="5">
                                                                        <Choice value="&lt;" />
                                                                        <Choice value="&lt; or =" />
                                                                        <Choice value="=" />
                                                                        <Choice value="&gt; or =" />
                                                                        <Choice value="&gt;" />
                                                                        <Choice value="≠" />
                                                                        <Choice value="%10" />
                                                                    </Parameter>
                                                                    <Parameter name="Value to compare" inherits_from_parent="0" content_type="3" value="5" default_value="0" custom_choice="0" tooltip="This is the value which is compared to the input value." id="6" />
                                                                    <Parameter name="modulo" inherits_from_parent="0" content_type="1" value="10" default_value="10" min="0" max="999999" tooltip="" id="7" />
                                                                </Box>
                                                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="4" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="Abort" id="5" localization="8" tooltip="" x="528" y="431">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
                                                <Output name="continue" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram scale="84.0896">
                                                                <Box name="Inc. Repeatings" id="3" localization="8" tooltip="" x="82" y="87">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Block Data" id="3" localization="8" tooltip="Blocks data transmitted from previous blocks." x="561" y="85">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.onStopped() #activate the output of the box
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Get Repeatings" id="6" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="111" y="83">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_count" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Increment" id="4" localization="8" tooltip="Increments or decrements a value" x="248" y="92">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, p):
        try:
            p = int(p)
        except:
            self.logger.warn("Cannot cast " + str(p) + " to integer.")
            p = 0

        if self.getParameter("Increment"):
            p += self.getParameter("Step")
        else:
            p -= self.getParameter("Step")

        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(p) #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Increment" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="If selected number is incremented. Otherwise decremented." id="5" />
                                                                                        <Parameter name="Step" inherits_from_parent="0" content_type="1" value="1" default_value="1" min="0" max="999999" tooltip="Number about the input should be in- or decremented." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Set Repeatings" id="5" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="384" y="82">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_count" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="3" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Compare" id="2" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="463" y="97">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.a = None
        self.b = None

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_a(self, a):
        self.a = a
        if self.a != None and self.b != None:
            self.result(self.a, self.b)

    def onInput_b(self, b):
        self.b = b
        if self.a != None and self.b != None:
            self.result(self.a, self.b)

    def result(self, a, b):
        try:
            a = float(a)
            b = float(b)
        except:
            a = str(a)
            b = str(b)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( a < b )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( a <= b )
        elif( operator == "=" ):
            self.outputTrueOrFalse( a == b )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( a >= b )
        elif( operator == ">" ):
            self.outputTrueOrFalse( a > b )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( a != b )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.true()
        else:
            self.false()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="a" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                                                                    <Input name="b" type="0" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                    <Output name="false" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="4" />
                                                                    <Output name="true" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="5" />
                                                                    <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="&gt; or =" default_value="≠" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="6">
                                                                        <Choice value="&lt;" />
                                                                        <Choice value="&lt; or =" />
                                                                        <Choice value="=" />
                                                                        <Choice value="&gt; or =" />
                                                                        <Choice value="&gt;" />
                                                                        <Choice value="≠" />
                                                                    </Parameter>
                                                                </Box>
                                                                <Box name="Abort" id="4" localization="8" tooltip="Introduction text for users." x="824" y="315">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="578" y="193">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="262" y="61">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Sehr gut. Jetzt stellen wir uns wieder aufrecht hin. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Sehr gut. Jetzt stellen wir uns wieder aufrecht hin.]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Random3" id="1" localization="8" tooltip="" x="76" y="208">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        i = random.randint(1, 3)
        if i == 1:
            self.output1()
        elif i == 2:
            self.output2()
        else:
            self.output3()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.output1() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="output1" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Output name="output2" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                                        <Output name="output3" type="1" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text (1)" id="3" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="260" y="210">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Super hast du das gemacht. Jetzt kannst du dich wieder aufrecht hinstellen. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Super hast du das gemacht. Jetzt kannst du dich wieder aufrecht hinstellen.]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text (2)" id="4" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="270" y="343">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Jetzt sind wir aufgewärmt. Gut gemacht. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Jetzt sind wir aufgewärmt. Gut gemacht.]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="6" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Go to position Stand" id="1" localization="8" tooltip="Robot will go to the position Stand&lt;br/&gt;Position description : Standing position with low power consumption. " x="1180" y="233">
                                                                    <bitmap>media/images/positions/Stand.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[#~ This script was generated automatically by drang&drop from Position Library
class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.postureProxy = None
        try:
            self.postureProxy = ALProxy("ALRobotPosture")
        except:
            self.logger.error("Module 'ALRobotPosture' not found.")

    def onUnload(self):
        if(self.postureProxy != None):
            self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.postureProxy != None):
            result = self.postureProxy.goToPosture("Stand", 0.8)
            if(result):
                self.success()
            else:
                self.logger.error("Posture Stand is not a part of the standard posture library or robot cannot reach the posture")
                self.failure()
        else:
            self.failure()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method,               as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                    <Resource name="All motors" type="Lock" timeout="0" />
                                                                    <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Update Data" id="9" localization="8" tooltip="" x="732" y="180">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Update Max Repeatings" id="6" localization="8" tooltip="" x="80" y="41">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="If" id="3" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="223" y="46">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onData(self, p):
        param = self.getParameter("Value to compare")
        try:
            p = float(p)
            param = float(param)
        except:
            p = str(p)
            param = str(param)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( p < param )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( p <= param )
        elif( operator == "=" ):
            self.outputTrueOrFalse( p == param )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( p >= param )
        elif( operator == ">" ):
            self.outputTrueOrFalse( p > param )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( p != param )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.output_then()
        else:
            self.output_else()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onData" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                                                                                                            <Output name="output_then" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="3" />
                                                                                                            <Output name="output_else" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="4" />
                                                                                                            <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="&lt;" default_value="≠" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="5">
                                                                                                                <Choice value="&lt;" />
                                                                                                                <Choice value="&lt; or =" />
                                                                                                                <Choice value="=" />
                                                                                                                <Choice value="&gt; or =" />
                                                                                                                <Choice value="&gt;" />
                                                                                                                <Choice value="≠" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Value to compare" inherits_from_parent="0" content_type="3" value="40" default_value="0" custom_choice="0" tooltip="This is the value which is compared to the input value." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Get Max Repeatings 1" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="84" y="51">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="10" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Get Max Repeatings 2" id="1" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="384" y="99">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="10" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Set Max Repeatings" id="2" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="672" y="96">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="10" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Increment" id="4" localization="8" tooltip="Increments or decrements a value" x="524" y="98">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, p):
        try:
            p = int(p)
        except:
            self.logger.warn("Cannot cast " + str(p) + " to integer.")
            p = 0

        if self.getParameter("Increment"):
            p += self.getParameter("Step")
        else:
            p -= self.getParameter("Step")

        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(p) #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Increment" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="If selected number is incremented. Otherwise decremented." id="5" />
                                                                                                            <Parameter name="Step" inherits_from_parent="0" content_type="1" value="5" default_value="1" min="0" max="999999" tooltip="Number about the input should be in- or decremented." id="6" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Update Use Head" id="4" localization="8" tooltip="" x="251" y="43">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Get Max Repeatings 2" id="1" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="84" y="55">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="10" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="If" id="2" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="238" y="49">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onData(self, p):
        param = self.getParameter("Value to compare")
        try:
            p = float(p)
            param = float(param)
        except:
            p = str(p)
            param = str(param)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( p < param )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( p <= param )
        elif( operator == "=" ):
            self.outputTrueOrFalse( p == param )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( p >= param )
        elif( operator == ">" ):
            self.outputTrueOrFalse( p > param )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( p != param )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.output_then()
        else:
            self.output_else()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onData" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                                                                                                            <Output name="output_then" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="3" />
                                                                                                            <Output name="output_else" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="4" />
                                                                                                            <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="&gt; or =" default_value="≠" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="5">
                                                                                                                <Choice value="&lt;" />
                                                                                                                <Choice value="&lt; or =" />
                                                                                                                <Choice value="=" />
                                                                                                                <Choice value="&gt; or =" />
                                                                                                                <Choice value="&gt;" />
                                                                                                                <Choice value="≠" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Value to compare" inherits_from_parent="0" content_type="3" value="20" default_value="0" custom_choice="0" tooltip="This is the value which is compared to the input value." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Set Use Head" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="547" y="117">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_use_head" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Number Edit" id="3" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="387" y="134">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(1)]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <number>1</number>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                                                                            <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Block Data" id="4" localization="8" tooltip="Blocks data transmitted from previous blocks." x="697" y="106">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.onStopped() #activate the output of the box
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="3" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Reset Temp Data" id="2" localization="8" tooltip="" x="424" y="38">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Set Head First Time" id="9" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="275" y="46">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_use_head_first_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Number Edit" id="10" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="99" y="53">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <number>0</number>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                                                                            <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Wait For Signals" id="1" localization="8" tooltip="Wait for both inputs to be stimulated before stimulating its output." x="439" y="94">
                                                                                                            <bitmap>media/images/box/wait.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ok = [False]*2

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onStart(self, nInput):
        self.ok[nInput-1] = True
        bOutput = True
        for bOk in self.ok:
            bOutput = bOutput and bOk
        if( bOutput ):
            self.ok = [False]*2
            self.signalsReceived()

    def onInput_signal1(self):
        self.onStart(1)

    def onInput_signal2(self):
        self.onStart(2)]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="signal1" type="1" type_size="1" nature="1" inner="0" tooltip="First signal to wait." id="2" />
                                                                                                            <Input name="signal2" type="1" type_size="1" nature="1" inner="0" tooltip="Second signal to wait." id="3" />
                                                                                                            <Output name="signalsReceived" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when both inputs have been stimulated." id="4" />
                                                                                                        </Box>
                                                                                                        <Box name="Block Data" id="3" localization="8" tooltip="Blocks data transmitted from previous blocks." x="601" y="86">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.onStopped() #activate the output of the box
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Number Edit (1)" id="2" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="86" y="190">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <number>0</number>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                                                                            <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Set Repeatings" id="5" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="281" y="192">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_count" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="9" indexofinput="2" outputowner="10" indexofoutput="3" />
                                                                                                        <Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="3" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="1" indexofinput="3" outputowner="5" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Wait For Signals" id="10" localization="8" tooltip="Wait for both inputs to be stimulated before stimulating its output." x="1008" y="244">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ok = [False]*2

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onStart(self, nInput):
        self.ok[nInput-1] = True
        bOutput = True
        for bOk in self.ok:
            bOutput = bOutput and bOk
        if( bOutput ):
            self.ok = [False]*2
            self.signalsReceived()

    def onInput_signal1(self):
        self.onStart(1)

    def onInput_signal2(self):
        self.onStart(2)]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="signal1" type="1" type_size="1" nature="1" inner="0" tooltip="First signal to wait." id="2" />
                                                                    <Input name="signal2" type="1" type_size="1" nature="1" inner="0" tooltip="Second signal to wait." id="3" />
                                                                    <Output name="signalsReceived" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when both inputs have been stimulated." id="4" />
                                                                </Box>
                                                                <Box name="Get Repeatings" id="6" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="290" y="48">
                                                                    <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_count" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                    <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                        <Choice value="string" />
                                                                        <Choice value="integer" />
                                                                        <Choice value="float" />
                                                                        <Choice value="boolean" />
                                                                    </Parameter>
                                                                    <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                </Box>
                                                                <Box name="Get Max Repeatings" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="295" y="180">
                                                                    <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                    <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                        <Choice value="string" />
                                                                        <Choice value="integer" />
                                                                        <Choice value="float" />
                                                                        <Choice value="boolean" />
                                                                    </Parameter>
                                                                    <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="10" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                </Box>
                                                                <Box name="Head Init" id="5" localization="8" tooltip="" x="658" y="318">
                                                                    <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="20">
                                                                        <ActuatorList model="nao">
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="0" mute="0" unit="0">
                                                                                <Key frame="20" value="-8.61579" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="0" mute="0" unit="0">
                                                                                <Key frame="20" value="-1.67234" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="5" />
                                                                <Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="5" />
                                                                <Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="4" />
                                                                <Link inputowner="10" indexofinput="3" outputowner="4" indexofoutput="4" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="3" outputowner="7" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="5" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="Motivation" id="3" localization="8" tooltip="" x="743" y="423">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram scale="70.7107">
                                                                <Box name="If" id="2" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="243" y="88">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onData(self, p):
        param = self.getParameter("Value to compare")
        try:
            p = float(p)
            param = float(param)
        except:
            p = str(p)
            param = str(param)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( p < param )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( p <= param )
        elif( operator == "=" ):
            self.outputTrueOrFalse( p == param )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( p >= param )
        elif( operator == ">" ):
            self.outputTrueOrFalse( p > param )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( p != param )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.output_then()
        else:
            self.output_else()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onData" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                                                                    <Output name="output_then" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="3" />
                                                                    <Output name="output_else" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="4" />
                                                                    <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="&lt; or =" default_value="≠" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="5">
                                                                        <Choice value="&lt;" />
                                                                        <Choice value="&lt; or =" />
                                                                        <Choice value="=" />
                                                                        <Choice value="&gt; or =" />
                                                                        <Choice value="&gt;" />
                                                                        <Choice value="≠" />
                                                                    </Parameter>
                                                                    <Parameter name="Value to compare" inherits_from_parent="0" content_type="3" value="5" default_value="0" custom_choice="0" tooltip="This is the value which is compared to the input value." id="6" />
                                                                </Box>
                                                                <Box name="Get Remaining Repeatings" id="3" localization="8" tooltip="" x="96" y="91">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Get Repeatings" id="6" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="124" y="178">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_count" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Get Max Repeatings" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="115" y="40">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="10" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Get Difference" id="1" localization="8" tooltip="" x="288" y="100">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        self.a = None
        self.b = None

    def onUnload(self):
        self.a = None
        self.b = None

    def onInput_a(self, p):
        self.a = p
        if self.a != None  and self.b != None:
            self.onStopped( self.a - self.b )

    def onInput_b(self, p):
        self.b = p
        if self.a != None  and self.b != None:
            self.onStopped( self.a - self.b )

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(p) #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="a" type="2" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="b" type="2" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="3" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="5" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Data Speech" id="5" localization="8" tooltip="Explanation what the user should do." x="606" y="51">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="568" y="39">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        self.data = None
        self.text = None

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.text = str(p)
        if self.data and self.text:
            self.say()

    def say(self):
        self.bIsRunning = True
        self.text = self.text.replace("%n", str(self.data))
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(self.text)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            #self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_data(self, data):
        self.data = data
        if self.data and self.text:
            self.say()

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="data" type="0" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="4" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="6" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="7" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="243" y="101">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Noch %n ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Noch %n]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Random3" id="1" localization="8" tooltip="" x="84" y="272">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        i = random.randint(1, 3)
        if i == 1:
            self.output1()
        elif i == 2:
            self.output2()
        else:
            self.output3()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.output1() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="output1" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Output name="output2" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                                        <Output name="output3" type="1" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text (1)" id="3" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="246" y="267">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " %n mal noch ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[%n mal noch]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text (2)" id="4" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="250" y="410">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Nur noch %n ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Nur noch %n]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                    <Link inputowner="2" indexofinput="3" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="6" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Get Remaining Repeatings (2)" id="4" localization="8" tooltip="" x="448" y="48">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Get Repeatings" id="6" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="124" y="178">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_count" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Get Max Repeatings" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="115" y="40">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="10" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Get Difference" id="1" localization="8" tooltip="" x="288" y="100">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        self.a = None
        self.b = None

    def onUnload(self):
        self.a = None
        self.b = None

    def onInput_a(self, p):
        self.a = p
        if self.a != None  and self.b != None:
            self.onStopped( self.a - self.b )

    def onInput_b(self, p):
        self.b = p
        if self.a != None  and self.b != None:
            self.onStopped( self.a - self.b )

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(p) #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="a" type="2" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="b" type="2" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="3" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="5" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Mod If" id="1" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="582" y="217">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onData(self, p):
        param = self.getParameter("Value to compare")
        try:
            p = float(p)
            param = float(param)
        except:
            p = str(p)
            param = str(param)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( p < param )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( p <= param )
        elif( operator == "=" ):
            self.outputTrueOrFalse( p == param )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( p >= param )
        elif( operator == ">" ):
            self.outputTrueOrFalse( p > param )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( p != param )
        elif( operator == "%10" ):
            self.outputTrueOrFalse( p%10 == param )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.output_then()
        else:
            self.output_else()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onData" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                                                                    <Output name="output_then" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="3" />
                                                                    <Output name="output_else" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="4" />
                                                                    <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="%10" default_value="%10" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="5">
                                                                        <Choice value="&lt;" />
                                                                        <Choice value="&lt; or =" />
                                                                        <Choice value="=" />
                                                                        <Choice value="&gt; or =" />
                                                                        <Choice value="&gt;" />
                                                                        <Choice value="≠" />
                                                                        <Choice value="%10" />
                                                                    </Parameter>
                                                                    <Parameter name="Value to compare" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="This is the value which is compared to the input value." id="6" />
                                                                </Box>
                                                                <Box name="Get Remaining Repeatings (1)" id="6" localization="8" tooltip="" x="421" y="218">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Get Repeatings" id="6" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="124" y="178">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_count" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Get Max Repeatings" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="115" y="40">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="10" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Get Difference" id="1" localization="8" tooltip="" x="288" y="100">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        self.a = None
        self.b = None

    def onUnload(self):
        self.a = None
        self.b = None

    def onInput_a(self, p):
        self.a = p
        if self.a != None  and self.b != None:
            self.onStopped( self.a - self.b )

    def onInput_b(self, p):
        self.b = p
        if self.a != None  and self.b != None:
            self.onStopped( self.a - self.b )

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(p) #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="a" type="2" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="b" type="2" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="3" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="5" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Data Speech (1)" id="7" localization="8" tooltip="Explanation what the user should do." x="919" y="374">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        self.data = None
        self.text = None

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.text = str(p)
        if self.data and self.text:
            self.say()

    def say(self):
        self.bIsRunning = True
        self.text = self.text.replace("%n", str(self.data))
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(self.text)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            #self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_data(self, data):
        self.data = data
        if self.data and self.text:
            self.say()

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="data" type="0" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="4" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="6" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="7" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="97" y="148">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Noch %n ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Noch %n]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                    <Link inputowner="2" indexofinput="3" outputowner="0" indexofoutput="2" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Get Remaining Repeatings (3)" id="8" localization="8" tooltip="" x="766" y="380">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Get Repeatings" id="6" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="124" y="178">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_count" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Get Max Repeatings" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="115" y="40">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="10" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Get Difference" id="1" localization="8" tooltip="" x="288" y="100">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        self.a = None
        self.b = None

    def onUnload(self):
        self.a = None
        self.b = None

    def onInput_a(self, p):
        self.a = p
        if self.a != None  and self.b != None:
            self.onStopped( self.a - self.b )

    def onInput_b(self, p):
        self.b = p
        if self.a != None  and self.b != None:
            self.onStopped( self.a - self.b )

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(p) #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="a" type="2" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="b" type="2" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="3" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="5" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Speech" id="10" localization="8" tooltip="Introduction text for users." x="908" y="236">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="626" y="242">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            #self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="192" y="50">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Super weiter so! ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Super weiter so!]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Random3" id="1" localization="8" tooltip="" x="58" y="221">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        i = random.randint(1, 3)
        if i == 1:
            self.output1()
        elif i == 2:
            self.output2()
        else:
            self.output3()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.output1() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="output1" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Output name="output2" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                                        <Output name="output3" type="1" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text (1)" id="3" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="202" y="215">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Nicht aufgeben. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Nicht aufgeben.]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text (2)" id="4" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="197" y="394">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Gut machst du das. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Gut machst du das.]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="6" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Random4" id="9" localization="8" tooltip="" x="742" y="124">
                                                                    <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        i = random.randint(1, 4)
        if i == 1:
            self.output1()
        elif i == 2:
            self.output2()
        elif i == 3:
            self.output3()
        else:
            self.output4()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.output1() #activate the output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="output1" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Output name="output2" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                    <Output name="output3" type="1" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                                                                    <Output name="output4" type="1" type_size="1" nature="1" inner="0" tooltip="" id="7" />
                                                                </Box>
                                                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="8" indexofoutput="4" />
                                                                <Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="10" indexofoutput="4" />
                                                                <Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="5" />
                                                                <Link inputowner="9" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="6" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="7" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="Hold Step 2" id="6" localization="8" tooltip="" x="347" y="435">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Random" id="1" localization="8" tooltip="" x="127" y="74">
                                                                    <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.onStopped( random.randint(self.getParameter("Min"), self.getParameter("Max")) )

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(p) #activate the output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Parameter name="Min" inherits_from_parent="0" content_type="1" value="0" default_value="0" min="0" max="999999" tooltip="" id="5" />
                                                                    <Parameter name="Max" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="999999" tooltip="" id="6" />
                                                                </Box>
                                                                <Box name="If" id="3" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="285" y="71">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onData(self, p):
        param = self.getParameter("Value to compare")
        try:
            p = float(p)
            param = float(param)
        except:
            p = str(p)
            param = str(param)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( p < param )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( p <= param )
        elif( operator == "=" ):
            self.outputTrueOrFalse( p == param )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( p >= param )
        elif( operator == ">" ):
            self.outputTrueOrFalse( p > param )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( p != param )
        elif( operator == "%10" ):
            self.outputTrueOrFalse( p % self.getParameter("modulo") == param )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.output_then()
        else:
            self.output_else()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onData" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                                                                    <Output name="output_then" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="3" />
                                                                    <Output name="output_else" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="4" />
                                                                    <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="&lt; or =" default_value="%10" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="5">
                                                                        <Choice value="&lt;" />
                                                                        <Choice value="&lt; or =" />
                                                                        <Choice value="=" />
                                                                        <Choice value="&gt; or =" />
                                                                        <Choice value="&gt;" />
                                                                        <Choice value="≠" />
                                                                        <Choice value="%10" />
                                                                    </Parameter>
                                                                    <Parameter name="Value to compare" inherits_from_parent="0" content_type="3" value="10" default_value="0" custom_choice="0" tooltip="This is the value which is compared to the input value." id="6" />
                                                                    <Parameter name="modulo" inherits_from_parent="0" content_type="1" value="10" default_value="10" min="0" max="999999" tooltip="" id="7" />
                                                                </Box>
                                                                <Box name="Hold Arms" id="7" localization="8" tooltip="" x="620" y="239">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram scale="84.0896">
                                                                                    <Box name="Speech" id="2" localization="8" tooltip="Introduction text for users." x="282" y="110">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram scale="100">
                                                                                                        <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="626" y="242">
                                                                                                            <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                                            <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="192" y="50">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " und wir halten die Position. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>
                                                                                                                    <![CDATA[你好]]>
</chinese>
                                                                                                                <english>
                                                                                                                    <![CDATA[Hello]]>
</english>
                                                                                                                <french>
                                                                                                                    <![CDATA[Bonjour]]>
</french>
                                                                                                                <german>
                                                                                                                    <![CDATA[und wir halten die Position.]]>
</german>
                                                                                                                <italian>
                                                                                                                    <![CDATA[Ciao]]>
</italian>
                                                                                                                <japanese>
                                                                                                                    <![CDATA[こんにちは]]>
</japanese>
                                                                                                                <korean>
                                                                                                                    <![CDATA[안녕하세요]]>
</korean>
                                                                                                                <portuguese>
                                                                                                                    <![CDATA[Olá]]>
</portuguese>
                                                                                                                <brazilian>
                                                                                                                    <![CDATA[Olá]]>
</brazilian>
                                                                                                                <spanish>
                                                                                                                    <![CDATA[Hola]]>
</spanish>
                                                                                                                <arabic>
                                                                                                                    <![CDATA[مرحبا]]>
</arabic>
                                                                                                                <polish>
                                                                                                                    <![CDATA[Cześć]]>
</polish>
                                                                                                                <czech>
                                                                                                                    <![CDATA[Ahoj]]>
</czech>
                                                                                                                <dutch>
                                                                                                                    <![CDATA[Hallo]]>
</dutch>
                                                                                                                <danish>
                                                                                                                    <![CDATA[Hej]]>
</danish>
                                                                                                                <finnish>
                                                                                                                    <![CDATA[Hei]]>
</finnish>
                                                                                                                <swedish>
                                                                                                                    <![CDATA[Hallå]]>
</swedish>
                                                                                                                <russian>
                                                                                                                    <![CDATA[Привет]]>
</russian>
                                                                                                                <turkish>
                                                                                                                    <![CDATA[Merhaba]]>
</turkish>
                                                                                                                <language>3</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Random3" id="1" localization="8" tooltip="" x="58" y="221">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        i = random.randint(1, 3)
        if i == 1:
            self.output1()
        elif i == 2:
            self.output2()
        else:
            self.output3()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.output1() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="output1" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Output name="output2" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                                                            <Output name="output3" type="1" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text (1)" id="3" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="202" y="215">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Wir halten die Position für einen Moment. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>
                                                                                                                    <![CDATA[你好]]>
</chinese>
                                                                                                                <english>
                                                                                                                    <![CDATA[Hello]]>
</english>
                                                                                                                <french>
                                                                                                                    <![CDATA[Bonjour]]>
</french>
                                                                                                                <german>
                                                                                                                    <![CDATA[Wir halten die Position für einen Moment.]]>
</german>
                                                                                                                <italian>
                                                                                                                    <![CDATA[Ciao]]>
</italian>
                                                                                                                <japanese>
                                                                                                                    <![CDATA[こんにちは]]>
</japanese>
                                                                                                                <korean>
                                                                                                                    <![CDATA[안녕하세요]]>
</korean>
                                                                                                                <portuguese>
                                                                                                                    <![CDATA[Olá]]>
</portuguese>
                                                                                                                <brazilian>
                                                                                                                    <![CDATA[Olá]]>
</brazilian>
                                                                                                                <spanish>
                                                                                                                    <![CDATA[Hola]]>
</spanish>
                                                                                                                <arabic>
                                                                                                                    <![CDATA[مرحبا]]>
</arabic>
                                                                                                                <polish>
                                                                                                                    <![CDATA[Cześć]]>
</polish>
                                                                                                                <czech>
                                                                                                                    <![CDATA[Ahoj]]>
</czech>
                                                                                                                <dutch>
                                                                                                                    <![CDATA[Hallo]]>
</dutch>
                                                                                                                <danish>
                                                                                                                    <![CDATA[Hej]]>
</danish>
                                                                                                                <finnish>
                                                                                                                    <![CDATA[Hei]]>
</finnish>
                                                                                                                <swedish>
                                                                                                                    <![CDATA[Hallå]]>
</swedish>
                                                                                                                <russian>
                                                                                                                    <![CDATA[Привет]]>
</russian>
                                                                                                                <turkish>
                                                                                                                    <![CDATA[Merhaba]]>
</turkish>
                                                                                                                <language>3</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text (2)" id="4" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="197" y="394">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Wir halten unsere Arme in der Position. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>
                                                                                                                    <![CDATA[你好]]>
</chinese>
                                                                                                                <english>
                                                                                                                    <![CDATA[Hello]]>
</english>
                                                                                                                <french>
                                                                                                                    <![CDATA[Bonjour]]>
</french>
                                                                                                                <german>
                                                                                                                    <![CDATA[Wir halten unsere Arme in der Position.]]>
</german>
                                                                                                                <italian>
                                                                                                                    <![CDATA[Ciao]]>
</italian>
                                                                                                                <japanese>
                                                                                                                    <![CDATA[こんにちは]]>
</japanese>
                                                                                                                <korean>
                                                                                                                    <![CDATA[안녕하세요]]>
</korean>
                                                                                                                <portuguese>
                                                                                                                    <![CDATA[Olá]]>
</portuguese>
                                                                                                                <brazilian>
                                                                                                                    <![CDATA[Olá]]>
</brazilian>
                                                                                                                <spanish>
                                                                                                                    <![CDATA[Hola]]>
</spanish>
                                                                                                                <arabic>
                                                                                                                    <![CDATA[مرحبا]]>
</arabic>
                                                                                                                <polish>
                                                                                                                    <![CDATA[Cześć]]>
</polish>
                                                                                                                <czech>
                                                                                                                    <![CDATA[Ahoj]]>
</czech>
                                                                                                                <dutch>
                                                                                                                    <![CDATA[Hallo]]>
</dutch>
                                                                                                                <danish>
                                                                                                                    <![CDATA[Hej]]>
</danish>
                                                                                                                <finnish>
                                                                                                                    <![CDATA[Hei]]>
</finnish>
                                                                                                                <swedish>
                                                                                                                    <![CDATA[Hallå]]>
</swedish>
                                                                                                                <russian>
                                                                                                                    <![CDATA[Привет]]>
</russian>
                                                                                                                <turkish>
                                                                                                                    <![CDATA[Merhaba]]>
</turkish>
                                                                                                                <language>3</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="6" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                        <Resource name="Speech" type="Lock" timeout="0" />
                                                                                    </Box>
                                                                                    <Box name="Wait" id="3" localization="8" tooltip="" x="497" y="103">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Get Hold Time" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="271" y="75">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Set Hold Time" id="1" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="591" y="77">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Increment" id="4" localization="8" tooltip="Increments or decrements a value" x="431" y="76">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, p):
        try:
            p = int(p)
        except:
            self.logger.warn("Cannot cast " + str(p) + " to integer.")
            p = 0

        if self.getParameter("Increment"):
            p += self.getParameter("Step")
        else:
            p -= self.getParameter("Step")

        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(p) #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Increment" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="If selected number is incremented. Otherwise decremented." id="5" />
                                                                                                            <Parameter name="Step" inherits_from_parent="0" content_type="1" value="1" default_value="1" min="0" max="999999" tooltip="Number about the input should be in- or decremented." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Wait" id="5" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="114" y="71">
                                                                                                            <bitmap>media/images/box/wait.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                                                                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                                                                                                            <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                                                                            <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Block Data" id="3" localization="8" tooltip="Blocks data transmitted from previous blocks." x="745" y="76">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.onStopped() #activate the output of the box
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="3" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Get Hold Time" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="128" y="422">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Compare" id="1" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="290" y="474">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.a = None
        self.b = None

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_a(self, a):
        self.a = a
        if self.a != None and self.b != None:
            self.result(self.a, self.b)

    def onInput_b(self, b):
        self.b = b
        if self.a != None and self.b != None:
            self.result(self.a, self.b)

    def result(self, a, b):
        try:
            a = float(a)
            b = float(b)
        except:
            a = str(a)
            b = str(b)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( a < b )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( a <= b )
        elif( operator == "=" ):
            self.outputTrueOrFalse( a == b )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( a >= b )
        elif( operator == ">" ):
            self.outputTrueOrFalse( a > b )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( a != b )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.true()
        else:
            self.false()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="a" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                                                                                        <Input name="b" type="0" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                        <Output name="true" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="4" />
                                                                                        <Output name="false" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="5" />
                                                                                        <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="&gt; or =" default_value="≠" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="6">
                                                                                            <Choice value="&lt;" />
                                                                                            <Choice value="&lt; or =" />
                                                                                            <Choice value="=" />
                                                                                            <Choice value="&gt; or =" />
                                                                                            <Choice value="&gt;" />
                                                                                            <Choice value="≠" />
                                                                                        </Parameter>
                                                                                    </Box>
                                                                                    <Box name="Get Max Hold Time" id="4" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="135" y="553">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="3" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Data Speech" id="6" localization="8" tooltip="Explanation what the user should do." x="618" y="513">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="568" y="39">
                                                                                                            <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        self.data = None
        self.text = None

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.text = str(p)
        if self.data and self.text:
            self.say()

    def say(self):
        self.bIsRunning = True
        self.text = self.text.replace("%n", str(self.data))
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(self.text)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_data(self, data):
        self.data = data
        if self.data and self.text:
            self.say()

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="data" type="0" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="4" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                                                                            <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="6" />
                                                                                                            <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text (1)" id="3" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="186" y="118">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " %n ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>
                                                                                                                    <![CDATA[你好]]>
</chinese>
                                                                                                                <english>
                                                                                                                    <![CDATA[Hello]]>
</english>
                                                                                                                <french>
                                                                                                                    <![CDATA[Bonjour]]>
</french>
                                                                                                                <german>
                                                                                                                    <![CDATA[%n]]>
</german>
                                                                                                                <italian>
                                                                                                                    <![CDATA[Ciao]]>
</italian>
                                                                                                                <japanese>
                                                                                                                    <![CDATA[こんにちは]]>
</japanese>
                                                                                                                <korean>
                                                                                                                    <![CDATA[안녕하세요]]>
</korean>
                                                                                                                <portuguese>
                                                                                                                    <![CDATA[Olá]]>
</portuguese>
                                                                                                                <brazilian>
                                                                                                                    <![CDATA[Olá]]>
</brazilian>
                                                                                                                <spanish>
                                                                                                                    <![CDATA[Hola]]>
</spanish>
                                                                                                                <arabic>
                                                                                                                    <![CDATA[مرحبا]]>
</arabic>
                                                                                                                <polish>
                                                                                                                    <![CDATA[Cześć]]>
</polish>
                                                                                                                <czech>
                                                                                                                    <![CDATA[Ahoj]]>
</czech>
                                                                                                                <dutch>
                                                                                                                    <![CDATA[Hallo]]>
</dutch>
                                                                                                                <danish>
                                                                                                                    <![CDATA[Hej]]>
</danish>
                                                                                                                <finnish>
                                                                                                                    <![CDATA[Hei]]>
</finnish>
                                                                                                                <swedish>
                                                                                                                    <![CDATA[Hallå]]>
</swedish>
                                                                                                                <russian>
                                                                                                                    <![CDATA[Привет]]>
</russian>
                                                                                                                <turkish>
                                                                                                                    <![CDATA[Merhaba]]>
</turkish>
                                                                                                                <language>3</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="5" />
                                                                                                        <Link inputowner="2" indexofinput="3" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                        <Resource name="Speech" type="Lock" timeout="0" />
                                                                                    </Box>
                                                                                    <Box name="Speech (1)" id="8" localization="8" tooltip="Introduction text for users." x="902" y="86">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram scale="100">
                                                                                                        <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="626" y="242">
                                                                                                            <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                                            <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="192" y="50">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Weiter gehts. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>
                                                                                                                    <![CDATA[你好]]>
</chinese>
                                                                                                                <english>
                                                                                                                    <![CDATA[Hello]]>
</english>
                                                                                                                <french>
                                                                                                                    <![CDATA[Bonjour]]>
</french>
                                                                                                                <german>
                                                                                                                    <![CDATA[Weiter gehts.]]>
</german>
                                                                                                                <italian>
                                                                                                                    <![CDATA[Ciao]]>
</italian>
                                                                                                                <japanese>
                                                                                                                    <![CDATA[こんにちは]]>
</japanese>
                                                                                                                <korean>
                                                                                                                    <![CDATA[안녕하세요]]>
</korean>
                                                                                                                <portuguese>
                                                                                                                    <![CDATA[Olá]]>
</portuguese>
                                                                                                                <brazilian>
                                                                                                                    <![CDATA[Olá]]>
</brazilian>
                                                                                                                <spanish>
                                                                                                                    <![CDATA[Hola]]>
</spanish>
                                                                                                                <arabic>
                                                                                                                    <![CDATA[مرحبا]]>
</arabic>
                                                                                                                <polish>
                                                                                                                    <![CDATA[Cześć]]>
</polish>
                                                                                                                <czech>
                                                                                                                    <![CDATA[Ahoj]]>
</czech>
                                                                                                                <dutch>
                                                                                                                    <![CDATA[Hallo]]>
</dutch>
                                                                                                                <danish>
                                                                                                                    <![CDATA[Hej]]>
</danish>
                                                                                                                <finnish>
                                                                                                                    <![CDATA[Hei]]>
</finnish>
                                                                                                                <swedish>
                                                                                                                    <![CDATA[Hallå]]>
</swedish>
                                                                                                                <russian>
                                                                                                                    <![CDATA[Привет]]>
</russian>
                                                                                                                <turkish>
                                                                                                                    <![CDATA[Merhaba]]>
</turkish>
                                                                                                                <language>3</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Random3" id="1" localization="8" tooltip="" x="58" y="221">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        i = random.randint(1, 3)
        if i == 1:
            self.output1()
        elif i == 2:
            self.output2()
        else:
            self.output3()

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.output1() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="output1" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Output name="output2" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                                                            <Output name="output3" type="1" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text (1)" id="3" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="202" y="215">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Und weiter. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>
                                                                                                                    <![CDATA[你好]]>
</chinese>
                                                                                                                <english>
                                                                                                                    <![CDATA[Hello]]>
</english>
                                                                                                                <french>
                                                                                                                    <![CDATA[Bonjour]]>
</french>
                                                                                                                <german>
                                                                                                                    <![CDATA[Und weiter.]]>
</german>
                                                                                                                <italian>
                                                                                                                    <![CDATA[Ciao]]>
</italian>
                                                                                                                <japanese>
                                                                                                                    <![CDATA[こんにちは]]>
</japanese>
                                                                                                                <korean>
                                                                                                                    <![CDATA[안녕하세요]]>
</korean>
                                                                                                                <portuguese>
                                                                                                                    <![CDATA[Olá]]>
</portuguese>
                                                                                                                <brazilian>
                                                                                                                    <![CDATA[Olá]]>
</brazilian>
                                                                                                                <spanish>
                                                                                                                    <![CDATA[Hola]]>
</spanish>
                                                                                                                <arabic>
                                                                                                                    <![CDATA[مرحبا]]>
</arabic>
                                                                                                                <polish>
                                                                                                                    <![CDATA[Cześć]]>
</polish>
                                                                                                                <czech>
                                                                                                                    <![CDATA[Ahoj]]>
</czech>
                                                                                                                <dutch>
                                                                                                                    <![CDATA[Hallo]]>
</dutch>
                                                                                                                <danish>
                                                                                                                    <![CDATA[Hej]]>
</danish>
                                                                                                                <finnish>
                                                                                                                    <![CDATA[Hei]]>
</finnish>
                                                                                                                <swedish>
                                                                                                                    <![CDATA[Hallå]]>
</swedish>
                                                                                                                <russian>
                                                                                                                    <![CDATA[Привет]]>
</russian>
                                                                                                                <turkish>
                                                                                                                    <![CDATA[Merhaba]]>
</turkish>
                                                                                                                <language>3</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text (2)" id="4" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="197" y="394">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Weiter die Arme schwingen. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>
                                                                                                                    <![CDATA[你好]]>
</chinese>
                                                                                                                <english>
                                                                                                                    <![CDATA[Hello]]>
</english>
                                                                                                                <french>
                                                                                                                    <![CDATA[Bonjour]]>
</french>
                                                                                                                <german>
                                                                                                                    <![CDATA[Weiter die Arme schwingen.]]>
</german>
                                                                                                                <italian>
                                                                                                                    <![CDATA[Ciao]]>
</italian>
                                                                                                                <japanese>
                                                                                                                    <![CDATA[こんにちは]]>
</japanese>
                                                                                                                <korean>
                                                                                                                    <![CDATA[안녕하세요]]>
</korean>
                                                                                                                <portuguese>
                                                                                                                    <![CDATA[Olá]]>
</portuguese>
                                                                                                                <brazilian>
                                                                                                                    <![CDATA[Olá]]>
</brazilian>
                                                                                                                <spanish>
                                                                                                                    <![CDATA[Hola]]>
</spanish>
                                                                                                                <arabic>
                                                                                                                    <![CDATA[مرحبا]]>
</arabic>
                                                                                                                <polish>
                                                                                                                    <![CDATA[Cześć]]>
</polish>
                                                                                                                <czech>
                                                                                                                    <![CDATA[Ahoj]]>
</czech>
                                                                                                                <dutch>
                                                                                                                    <![CDATA[Hallo]]>
</dutch>
                                                                                                                <danish>
                                                                                                                    <![CDATA[Hej]]>
</danish>
                                                                                                                <finnish>
                                                                                                                    <![CDATA[Hei]]>
</finnish>
                                                                                                                <swedish>
                                                                                                                    <![CDATA[Hallå]]>
</swedish>
                                                                                                                <russian>
                                                                                                                    <![CDATA[Привет]]>
</russian>
                                                                                                                <turkish>
                                                                                                                    <![CDATA[Merhaba]]>
</turkish>
                                                                                                                <language>3</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="6" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                        <Resource name="Speech" type="Lock" timeout="0" />
                                                                                    </Box>
                                                                                    <Box name="Update Data" id="9" localization="8" tooltip="" x="764" y="243">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Set Hold Time" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="357" y="62">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Get Max Hold Time" id="4" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="71" y="192">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="3" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Number Edit" id="1" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="100" y="75">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <number>0</number>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                                                                            <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Set Max Hold Time" id="2" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="384" y="199">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="3" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Wait For Signals" id="3" localization="8" tooltip="Wait for both inputs to be stimulated before stimulating its output." x="635" y="109">
                                                                                                            <bitmap>media/images/box/wait.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ok = [False]*2

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onStart(self, nInput):
        self.ok[nInput-1] = True
        bOutput = True
        for bOk in self.ok:
            bOutput = bOutput and bOk
        if( bOutput ):
            self.ok = [False]*2
            self.signalsReceived()

    def onInput_signal1(self):
        self.onStart(1)

    def onInput_signal2(self):
        self.onStart(2)]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="signal1" type="1" type_size="1" nature="1" inner="0" tooltip="First signal to wait." id="2" />
                                                                                                            <Input name="signal2" type="1" type_size="1" nature="1" inner="0" tooltip="Second signal to wait." id="3" />
                                                                                                            <Output name="signalsReceived" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when both inputs have been stimulated." id="4" />
                                                                                                        </Box>
                                                                                                        <Box name="Increment" id="5" localization="8" tooltip="Increments or decrements a value" x="226" y="198">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, p):
        try:
            p = int(p)
        except:
            self.logger.warn("Cannot cast " + str(p) + " to integer.")
            p = 0

        if self.getParameter("Increment"):
            p += self.getParameter("Step")
        else:
            p -= self.getParameter("Step")

        self.onStopped(p)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(p) #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Increment" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="If selected number is incremented. Otherwise decremented." id="5" />
                                                                                                            <Parameter name="Step" inherits_from_parent="0" content_type="1" value="1" default_value="1" min="0" max="999999" tooltip="Number about the input should be in- or decremented." id="6" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="3" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Get Difference" id="12" localization="8" tooltip="" x="474" y="522">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Get Hold Time" id="5" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="157" y="192">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Get Max Hold Time" id="10" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="153" y="68">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="3" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Get Difference" id="11" localization="8" tooltip="" x="310" y="134">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        self.a = None
        self.b = None

    def onUnload(self):
        self.a = None
        self.b = None

    def onInput_a(self, p):
        self.a = p
        if self.a != None and self.b != None:
            try:
                x = self.a - self.b
                self.a = None
                self.b = None
                self.onStopped( x )
            except:
                pass

    def onInput_b(self, p):
        self.b = p
        if self.a != None and self.b != None:
            try:
                x = self.a - self.b
                self.a = None
                self.b = None
                self.onStopped( x )
            except:
                pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="a" type="2" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="b" type="2" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" />
                                                                                                            <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="11" indexofinput="2" outputowner="10" indexofoutput="4" />
                                                                                                        <Link inputowner="11" indexofinput="3" outputowner="5" indexofoutput="4" />
                                                                                                        <Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="11" indexofoutput="5" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Init Data" id="5" localization="8" tooltip="" x="101" y="114">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Set Hold Time" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="380" y="74">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                                            <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                                                <Choice value="string" />
                                                                                                                <Choice value="integer" />
                                                                                                                <Choice value="float" />
                                                                                                                <Choice value="boolean" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                                        </Box>
                                                                                                        <Box name="Number Edit" id="1" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="123" y="87">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <number>0</number>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                                                                            <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Block Data" id="3" localization="8" tooltip="Blocks data transmitted from previous blocks." x="538" y="73">
                                                                                                            <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.onStopped() #activate the output of the box
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="3" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="3" outputowner="4" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="9" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="8" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="8" indexofoutput="4" />
                                                                                    <Link inputowner="12" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="12" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Get Remaining Repeatings" id="2" localization="8" tooltip="" x="129" y="253">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Get Repeatings" id="6" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="124" y="178">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_count" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Get Max Repeatings" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="115" y="40">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                                                        <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                                                            <Choice value="string" />
                                                                                            <Choice value="integer" />
                                                                                            <Choice value="float" />
                                                                                            <Choice value="boolean" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="10" default_value="0" custom_choice="0" tooltip="" id="7" />
                                                                                    </Box>
                                                                                    <Box name="Get Difference" id="1" localization="8" tooltip="" x="288" y="100">
                                                                                        <bitmap>media/images/box/box-python-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        self.a = None
        self.b = None

    def onUnload(self):
        self.a = None
        self.b = None

    def onInput_a(self, p):
        self.a = p
        if self.a != None  and self.b != None:
            self.onStopped( self.a - self.b )

    def onInput_b(self, p):
        self.b = p
        if self.a != None  and self.b != None:
            self.onStopped( self.a - self.b )

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped(p) #activate the output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="a" type="2" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="b" type="2" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="4" />
                                                                                        <Output name="onStopped" type="2" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="3" outputowner="6" indexofoutput="4" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="5" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="If (1)" id="4" localization="8" tooltip="Test a condition and stimulate the then or else outputs depending on the boolean&#x0A;value of the condition.&#x0A;The condition can be set in parameters." x="285" y="242">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onData(self, p):
        param = self.getParameter("Value to compare")
        try:
            p = float(p)
            param = float(param)
        except:
            p = str(p)
            param = str(param)
        operator = self.getParameter("Condition operator")
        if( operator == "<" ):
            self.outputTrueOrFalse( p < param )
        elif( operator == "< or =" ):
            self.outputTrueOrFalse( p <= param )
        elif( operator == "=" ):
            self.outputTrueOrFalse( p == param )
        elif( operator == "> or =" ):
            self.outputTrueOrFalse( p >= param )
        elif( operator == ">" ):
            self.outputTrueOrFalse( p > param )
        elif( operator == "≠" ):
            self.outputTrueOrFalse( p != param )
        elif( operator == "%10" ):
            self.outputTrueOrFalse( p % self.getParameter("modulo") == param )
        else:
            raise Exception( "Operator not known: " + str(operator) )

    def outputTrueOrFalse(self, condition):
        if( condition ):
            self.output_then()
        else:
            self.output_else()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onData" type="0" type_size="1" nature="1" inner="0" tooltip="The data to test." id="2" />
                                                                    <Output name="output_then" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is true." id="3" />
                                                                    <Output name="output_else" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the condition is false." id="4" />
                                                                    <Parameter name="Condition operator" inherits_from_parent="0" content_type="3" value="&gt;" default_value="%10" custom_choice="0" tooltip='Choose the condition operator.&#x0A;&#x0A;For example:&#x0A;If you choose &quot;&gt; or =&quot;, the condition will be: is the input is higher or equal&#x0A;than the parameter?' id="5">
                                                                        <Choice value="&lt;" />
                                                                        <Choice value="&lt; or =" />
                                                                        <Choice value="=" />
                                                                        <Choice value="&gt; or =" />
                                                                        <Choice value="&gt;" />
                                                                        <Choice value="≠" />
                                                                        <Choice value="%10" />
                                                                    </Parameter>
                                                                    <Parameter name="Value to compare" inherits_from_parent="0" content_type="3" value="5" default_value="0" custom_choice="0" tooltip="This is the value which is compared to the input value." id="6" />
                                                                    <Parameter name="modulo" inherits_from_parent="0" content_type="1" value="10" default_value="10" min="0" max="999999" tooltip="" id="7" />
                                                                </Box>
                                                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="4" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Link inputowner="12" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="1" indexofinput="2" outputowner="17" indexofoutput="4" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="5" />
                                            <Link inputowner="0" indexofinput="4" outputowner="12" indexofoutput="4" />
                                            <Link inputowner="17" indexofinput="2" outputowner="12" indexofoutput="5" />
                                            <Link inputowner="3" indexofinput="2" outputowner="5" indexofoutput="4" />
                                            <Link inputowner="17" indexofinput="2" outputowner="3" indexofoutput="4" />
                                            <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Sit &amp; Stand" id="2" localization="8" tooltip="" x="510" y="392">
                            <bitmap>media/images/box/movement/sit.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Hinsetzen Aufstehen" id="3" localization="8" tooltip="" x="597" y="377">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="340">
                                                    <BehaviorLayer name="Füße parallel">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram />
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <BehaviorLayer name="behavior_layer2">
                                                        <BehaviorKeyframe name="keyframe80" index="80">
                                                            <Diagram>
                                                                <Box name="Say" id="1" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="152" y="94">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Den Po nach hinten und den Oberkörper nach vorne schieben. Dabei leicht in die Knie gehen. Jetzt quasi einen Enten Arsch machen. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Den Po nach hinten und den Oberkörper nach vorne schieben. Dabei leicht in die Knie gehen. Jetzt quasi einen Enten Arsch machen.]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Stop" id="2" localization="8" tooltip="Stop the parent timeline at the current frame index.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="153" y="260">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onStop(self):
        self.getParentTimeline().pause()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Box name="Play" id="3" localization="8" tooltip="Play the parent timeline from the current frame index. Do not do anything if the&#x0A;timeline is already playing." x="337" y="91">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onPlay(self):
        self.getParentTimeline().play()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onPlay" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline starts when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe120" index="120">
                                                            <Diagram>
                                                                <Box name="Say" id="1" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="137" y="94">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Langsam nach hinten setzen. nicht plumpsen. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Langsam nach hinten setzen. nicht plumpsen.]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Stop" id="2" localization="8" tooltip="Stop the parent timeline at the current frame index.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="161" y="293">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onStop(self):
        self.getParentTimeline().pause()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Box name="Play" id="3" localization="8" tooltip="Play the parent timeline from the current frame index. Do not do anything if the&#x0A;timeline is already playing." x="344" y="131">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onPlay(self):
        self.getParentTimeline().play()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onPlay" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline starts when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <BehaviorLayer name="behavior_layer3">
                                                        <BehaviorKeyframe name="keyframe160" index="160">
                                                            <Diagram>
                                                                <Box name="Say" id="1" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="164" y="93">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Wenn du sicher sitzt richte deinen Oberkörper auf und bleibe einen Moment in dieser Position. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Wenn du sicher sitzt richte deinen Oberkörper auf und bleibe einen Moment in dieser Position.]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Stop" id="2" localization="8" tooltip="Stop the parent timeline at the current frame index.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="148" y="277">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onStop(self):
        self.getParentTimeline().pause()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Box name="Play" id="3" localization="8" tooltip="Play the parent timeline from the current frame index. Do not do anything if the&#x0A;timeline is already playing." x="339" y="118">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onPlay(self):
        self.getParentTimeline().play()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onPlay" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline starts when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <BehaviorLayer name="behavior_layer4">
                                                        <BehaviorKeyframe name="keyframe240" index="240">
                                                            <Diagram>
                                                                <Box name="Say" id="1" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="148" y="64">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Zum Aufstehen den Oberkörper wieder nach vorne Beugen und wieder den Enten Arsch machen. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>
                                                                                                <![CDATA[你好]]>
</chinese>
                                                                                            <english>
                                                                                                <![CDATA[Hello]]>
</english>
                                                                                            <french>
                                                                                                <![CDATA[Bonjour]]>
</french>
                                                                                            <german>
                                                                                                <![CDATA[Zum Aufstehen den Oberkörper wieder nach vorne Beugen und wieder den Enten Arsch machen.]]>
</german>
                                                                                            <italian>
                                                                                                <![CDATA[Ciao]]>
</italian>
                                                                                            <japanese>
                                                                                                <![CDATA[こんにちは]]>
</japanese>
                                                                                            <korean>
                                                                                                <![CDATA[안녕하세요]]>
</korean>
                                                                                            <portuguese>
                                                                                                <![CDATA[Olá]]>
</portuguese>
                                                                                            <brazilian>
                                                                                                <![CDATA[Olá]]>
</brazilian>
                                                                                            <spanish>
                                                                                                <![CDATA[Hola]]>
</spanish>
                                                                                            <arabic>
                                                                                                <![CDATA[مرحبا]]>
</arabic>
                                                                                            <polish>
                                                                                                <![CDATA[Cześć]]>
</polish>
                                                                                            <czech>
                                                                                                <![CDATA[Ahoj]]>
</czech>
                                                                                            <dutch>
                                                                                                <![CDATA[Hallo]]>
</dutch>
                                                                                            <danish>
                                                                                                <![CDATA[Hej]]>
</danish>
                                                                                            <finnish>
                                                                                                <![CDATA[Hei]]>
</finnish>
                                                                                            <swedish>
                                                                                                <![CDATA[Hallå]]>
</swedish>
                                                                                            <russian>
                                                                                                <![CDATA[Привет]]>
</russian>
                                                                                            <turkish>
                                                                                                <![CDATA[Merhaba]]>
</turkish>
                                                                                            <language>3</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Stop" id="2" localization="8" tooltip="Stop the parent timeline at the current frame index.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="147" y="217">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onStop(self):
        self.getParentTimeline().pause()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Box name="Play" id="3" localization="8" tooltip="Play the parent timeline from the current frame index. Do not do anything if the&#x0A;timeline is already playing." x="359" y="48">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onPlay(self):
        self.getParentTimeline().play()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onPlay" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline starts when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <ActuatorList model="nao">
                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="-8.35212" />
                                                            <Key frame="120" value="-7.29742" />
                                                            <Key frame="160" value="-8.61579" />
                                                            <Key frame="200" value="-8.61579" />
                                                            <Key frame="240" value="-8.61579" />
                                                            <Key frame="270" value="-7.4732" />
                                                            <Key frame="300" value="-6.77007" />
                                                            <Key frame="340" value="-8.26423" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="-0.793436" />
                                                            <Key frame="120" value="-0.441859" />
                                                            <Key frame="160" value="-0.441859" />
                                                            <Key frame="200" value="-0.441859" />
                                                            <Key frame="240" value="-0.441859" />
                                                            <Key frame="270" value="-1.05711" />
                                                            <Key frame="300" value="-0.441859" />
                                                            <Key frame="340" value="-1.05711" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="5.18321" />
                                                            <Key frame="120" value="-19.4265" />
                                                            <Key frame="160" value="21.3553" />
                                                            <Key frame="200" value="20.3885" />
                                                            <Key frame="240" value="20.3885" />
                                                            <Key frame="270" value="18.4549" />
                                                            <Key frame="300" value="-5.97904" />
                                                            <Key frame="340" value="5.2711" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="-7.11683" />
                                                            <Key frame="120" value="-2.1949" />
                                                            <Key frame="160" value="6.59429" />
                                                            <Key frame="200" value="7.73688" />
                                                            <Key frame="240" value="7.73688" />
                                                            <Key frame="270" value="7.64898" />
                                                            <Key frame="300" value="0.529749" />
                                                            <Key frame="340" value="-7.29261" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="-21.2674" />
                                                            <Key frame="120" value="-27.5077" />
                                                            <Key frame="160" value="-53.26" />
                                                            <Key frame="200" value="-26.7167" />
                                                            <Key frame="240" value="-26.7167" />
                                                            <Key frame="270" value="-39.8125" />
                                                            <Key frame="300" value="-60.9944" />
                                                            <Key frame="340" value="-23.7284" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="-69.7006" />
                                                            <Key frame="120" value="-72.7768" />
                                                            <Key frame="160" value="-62.5813" />
                                                            <Key frame="200" value="-68.2943" />
                                                            <Key frame="240" value="-68.2943" />
                                                            <Key frame="270" value="-61.3508" />
                                                            <Key frame="300" value="-48.0792" />
                                                            <Key frame="340" value="-67.1517" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHand" recordable="0" mute="0" unit="1">
                                                            <Key frame="80" value="0.2992" />
                                                            <Key frame="120" value="0.3028" />
                                                            <Key frame="160" value="0.3028" />
                                                            <Key frame="200" value="0.3028" />
                                                            <Key frame="240" value="0.3028" />
                                                            <Key frame="270" value="0.3028" />
                                                            <Key frame="300" value="0.3028" />
                                                            <Key frame="340" value="0.3028" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="7.4732" />
                                                            <Key frame="120" value="-53.26" />
                                                            <Key frame="160" value="-87.8014" />
                                                            <Key frame="200" value="-68.5531" />
                                                            <Key frame="240" value="-68.5531" />
                                                            <Key frame="270" value="-88" />
                                                            <Key frame="300" value="-81.3853" />
                                                            <Key frame="340" value="7.56109" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="5.53958" />
                                                            <Key frame="120" value="-5.79845" />
                                                            <Key frame="160" value="-11.1598" />
                                                            <Key frame="200" value="-7.02893" />
                                                            <Key frame="240" value="-7.02893" />
                                                            <Key frame="270" value="-11.5993" />
                                                            <Key frame="300" value="-11.5993" />
                                                            <Key frame="340" value="5.89115" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="-9.22623" />
                                                            <Key frame="120" value="-12.1267" />
                                                            <Key frame="160" value="-17.8396" />
                                                            <Key frame="200" value="-12.9177" />
                                                            <Key frame="240" value="-12.9177" />
                                                            <Key frame="270" value="-14.0603" />
                                                            <Key frame="300" value="-23.201" />
                                                            <Key frame="340" value="-9.22623" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="-5.10013" />
                                                            <Key frame="120" value="55.5452" />
                                                            <Key frame="160" value="57.1272" />
                                                            <Key frame="200" value="58.1819" />
                                                            <Key frame="240" value="58.1819" />
                                                            <Key frame="270" value="61.4339" />
                                                            <Key frame="300" value="77.0786" />
                                                            <Key frame="340" value="-5.27591" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="87.1862" />
                                                            <Key frame="120" value="46.756" />
                                                            <Key frame="160" value="37.2637" />
                                                            <Key frame="200" value="56.7756" />
                                                            <Key frame="240" value="56.7756" />
                                                            <Key frame="270" value="21.619" />
                                                            <Key frame="300" value="33.0449" />
                                                            <Key frame="340" value="83.319" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="7.20472" />
                                                            <Key frame="120" value="3.0738" />
                                                            <Key frame="160" value="7.29261" />
                                                            <Key frame="200" value="-7.12163" />
                                                            <Key frame="240" value="-7.12163" />
                                                            <Key frame="270" value="-4.74855" />
                                                            <Key frame="300" value="-7.91266" />
                                                            <Key frame="340" value="8.61098" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="3.77694" />
                                                            <Key frame="120" value="7.46839" />
                                                            <Key frame="160" value="21.5311" />
                                                            <Key frame="200" value="-16.1745" />
                                                            <Key frame="240" value="-16.1745" />
                                                            <Key frame="270" value="-2.90283" />
                                                            <Key frame="300" value="27.8593" />
                                                            <Key frame="340" value="6.4137" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="5.53958" />
                                                            <Key frame="120" value="-18.0154" />
                                                            <Key frame="160" value="25.491" />
                                                            <Key frame="200" value="25.7547" />
                                                            <Key frame="240" value="25.7547" />
                                                            <Key frame="270" value="22.3269" />
                                                            <Key frame="300" value="-9.48991" />
                                                            <Key frame="340" value="5.27591" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="7.29742" />
                                                            <Key frame="120" value="1.32078" />
                                                            <Key frame="160" value="1.145" />
                                                            <Key frame="200" value="-1.22808" />
                                                            <Key frame="240" value="-1.22808" />
                                                            <Key frame="270" value="-2.63435" />
                                                            <Key frame="300" value="2.37549" />
                                                            <Key frame="340" value="6.94585" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="20.8327" />
                                                            <Key frame="120" value="39.4658" />
                                                            <Key frame="160" value="61.9661" />
                                                            <Key frame="200" value="39.9052" />
                                                            <Key frame="240" value="39.9052" />
                                                            <Key frame="270" value="39.7295" />
                                                            <Key frame="300" value="39.6416" />
                                                            <Key frame="340" value="24.2605" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="70.0473" />
                                                            <Key frame="120" value="68.5531" />
                                                            <Key frame="160" value="68.2016" />
                                                            <Key frame="200" value="62.8402" />
                                                            <Key frame="240" value="62.8402" />
                                                            <Key frame="270" value="57.7425" />
                                                            <Key frame="300" value="47.7228" />
                                                            <Key frame="340" value="67.2348" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHand" recordable="0" mute="0" unit="1">
                                                            <Key frame="80" value="0.3072" />
                                                            <Key frame="120" value="0.3064" />
                                                            <Key frame="160" value="0.3252" />
                                                            <Key frame="200" value="0.3064" />
                                                            <Key frame="240" value="0.3064" />
                                                            <Key frame="270" value="0.3172" />
                                                            <Key frame="300" value="0.3064" />
                                                            <Key frame="340" value="0.3064" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="7.3805" />
                                                            <Key frame="120" value="-62.845" />
                                                            <Key frame="160" value="-87.5426" />
                                                            <Key frame="200" value="-67.8548" />
                                                            <Key frame="240" value="-67.8548" />
                                                            <Key frame="270" value="-87.4547" />
                                                            <Key frame="300" value="-87.8941" />
                                                            <Key frame="340" value="7.99575" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="-5.44688" />
                                                            <Key frame="120" value="-2.54646" />
                                                            <Key frame="160" value="3.60597" />
                                                            <Key frame="200" value="1.67234" />
                                                            <Key frame="240" value="1.67234" />
                                                            <Key frame="270" value="5.18802" />
                                                            <Key frame="300" value="-1.57965" />
                                                            <Key frame="340" value="-5.88634" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RHipYawPitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="-9.22623" />
                                                            <Key frame="120" value="-12.1267" />
                                                            <Key frame="160" value="-17.8396" />
                                                            <Key frame="200" value="-12.9177" />
                                                            <Key frame="240" value="-12.9177" />
                                                            <Key frame="270" value="-14.0603" />
                                                            <Key frame="300" value="-23.201" />
                                                            <Key frame="340" value="-9.22623" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="-4.74374" />
                                                            <Key frame="120" value="60.9993" />
                                                            <Key frame="160" value="51.1554" />
                                                            <Key frame="200" value="51.8585" />
                                                            <Key frame="240" value="51.8585" />
                                                            <Key frame="270" value="57.3078" />
                                                            <Key frame="300" value="84.4664" />
                                                            <Key frame="340" value="-5.29" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="87.8941" />
                                                            <Key frame="120" value="44.9151" />
                                                            <Key frame="160" value="44.4756" />
                                                            <Key frame="200" value="61.8782" />
                                                            <Key frame="240" value="61.8782" />
                                                            <Key frame="270" value="25.8426" />
                                                            <Key frame="300" value="17.405" />
                                                            <Key frame="340" value="83.0601" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="-7.12163" />
                                                            <Key frame="120" value="2.63435" />
                                                            <Key frame="160" value="1.84332" />
                                                            <Key frame="200" value="0.700723" />
                                                            <Key frame="240" value="0.700723" />
                                                            <Key frame="270" value="8.08364" />
                                                            <Key frame="300" value="3.60116" />
                                                            <Key frame="340" value="-8.61579" />
                                                        </ActuatorCurve>
                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="0" mute="0" unit="0">
                                                            <Key frame="80" value="8.4352" />
                                                            <Key frame="120" value="-9.49471" />
                                                            <Key frame="160" value="-19.6902" />
                                                            <Key frame="200" value="-7.73688" />
                                                            <Key frame="240" value="-7.73688" />
                                                            <Key frame="270" value="4.04062" />
                                                            <Key frame="300" value="-2.63916" />
                                                            <Key frame="340" value="4.48007" />
                                                        </ActuatorCurve>
                                                    </ActuatorList>
                                                </Timeline>
                                            </Box>
                                            <Box name="Say" id="4" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="431" y="376">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                </Box>
                                                                <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Bonjour ",
			"German" : " Stell dich aufrecht mit deinem Rücken direkt vor deine Sitzmöglichkeit und Füße hüftbreit parallel hinstellen. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Portuguese" : " Olá ",
			"Brazilian" : " Olá ",
			"Spanish" : " Hola ",
			"Arabic" : " مرحبا ",
			"Polish" : " Cześć ",
			"Czech" : " Ahoj ",
			"Dutch" : " Hallo ",
			"Danish" : " Hej ",
			"Finnish" : " Hei ",
			"Swedish" : " Hallå ",
			"Russian" : " Привет ",
			"Turkish" : " Merhaba "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <chinese>
                                                                            <![CDATA[你好]]>
</chinese>
                                                                        <english>
                                                                            <![CDATA[Hello]]>
</english>
                                                                        <french>
                                                                            <![CDATA[Bonjour]]>
</french>
                                                                        <german>
                                                                            <![CDATA[Stell dich aufrecht mit deinem Rücken direkt vor deine Sitzmöglichkeit und Füße hüftbreit parallel hinstellen.]]>
</german>
                                                                        <italian>
                                                                            <![CDATA[Ciao]]>
</italian>
                                                                        <japanese>
                                                                            <![CDATA[こんにちは]]>
</japanese>
                                                                        <korean>
                                                                            <![CDATA[안녕하세요]]>
</korean>
                                                                        <portuguese>
                                                                            <![CDATA[Olá]]>
</portuguese>
                                                                        <brazilian>
                                                                            <![CDATA[Olá]]>
</brazilian>
                                                                        <spanish>
                                                                            <![CDATA[Hola]]>
</spanish>
                                                                        <arabic>
                                                                            <![CDATA[مرحبا]]>
</arabic>
                                                                        <polish>
                                                                            <![CDATA[Cześć]]>
</polish>
                                                                        <czech>
                                                                            <![CDATA[Ahoj]]>
</czech>
                                                                        <dutch>
                                                                            <![CDATA[Hallo]]>
</dutch>
                                                                        <danish>
                                                                            <![CDATA[Hej]]>
</danish>
                                                                        <finnish>
                                                                            <![CDATA[Hei]]>
</finnish>
                                                                        <swedish>
                                                                            <![CDATA[Hallå]]>
</swedish>
                                                                        <russian>
                                                                            <![CDATA[Привет]]>
</russian>
                                                                        <turkish>
                                                                            <![CDATA[Merhaba]]>
</turkish>
                                                                        <language>3</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="Speech" type="Lock" timeout="0" />
                                            </Box>
                                            <Link inputowner="3" indexofinput="2" outputowner="4" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Init" id="3" localization="8" tooltip="" x="91" y="76">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Set Language" id="4" localization="8" tooltip="Select the language you would like the robot to speak and understand. Any following call to&#x0A;ALSpeechRecognition (Speech Reco. box for instance) or ALTextToSpeech (Say box&#x0A;for instance) will use this language." x="140" y="86">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        try:
            self.tts = ALProxy("ALTextToSpeech")
        except:
            self.logger.warn("ALTextToSpeech is not available, language setting cannot be applied to speech")
            self.tts = None

        try:
            self.asr = ALProxy("ALSpeechRecognition")
        except:
            self.logger.warn("ALSpeechRecognition is not available, language setting cannot be applied to recognition")
            self.asr = None

        try:
            self.dialog = ALProxy("ALDialog")
        except:
            self.logger.warn("ALDialog is not available, language setting cannot be applied to dialog")
            self.dialog = None

    def onInput_onSet(self):
        lang = self.getParameter("Language")
        try:
            if self.asr:
                self.asr.setLanguage( self.getParameter("Language") )
            if self.tts:
                self.tts.setLanguage( self.getParameter("Language") )
            if self.dialog:
                self.dialog.setLanguage( self.getParameter("Language") )
            if self.tts is None and self.asr is None and self.dialog is None:
                raise RuntimeError("Cannot set language: neither ALTextToSpeech nor ALSpeechRecognition nor ALDialog is available.")
            self.onReady()
        except:
            error = "Language " + lang + " cannot be set."
            self.logger.warn(error)
            self.onError(error)]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The data is set when a signal is received on this input." id="2" />
                                                <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the data has been set." id="3" />
                                                <Output name="onError" type="3" type_size="1" nature="2" inner="0" tooltip="Error output:&#x0A;- triggered if the language asked cannot be set" id="4" />
                                                <Parameter name="Language" inherits_from_parent="0" content_type="3" value="German" default_value="English" custom_choice="1" tooltip="Set the language the robot speaks and understands." id="5">
                                                    <Choice value="Arabic" />
                                                    <Choice value="Brazilian" />
                                                    <Choice value="Chinese" />
                                                    <Choice value="Czech" />
                                                    <Choice value="Danish" />
                                                    <Choice value="Dutch" />
                                                    <Choice value="English" />
                                                    <Choice value="Finnish" />
                                                    <Choice value="French" />
                                                    <Choice value="German" />
                                                    <Choice value="Italian" />
                                                    <Choice value="Japanese" />
                                                    <Choice value="Korean" />
                                                    <Choice value="Polish" />
                                                    <Choice value="Portuguese" />
                                                    <Choice value="Russian" />
                                                    <Choice value="Spanish" />
                                                    <Choice value="Swedish" />
                                                    <Choice value="Turkish" />
                                                </Parameter>
                                                <Resource name="Speech" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="Eye LEDs" id="1" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="149" y="220">
                                                <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                                    <Choice value="Both" />
                                                    <Choice value="Left" />
                                                    <Choice value="Right" />
                                                </Parameter>
                                                <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.ids = []
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        id = self.leds.post.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"))
        self.ids.append(id)
        self.leds.wait(id, 0)
        self.ids.remove(id)
        if( self.ids == [] ):
            self.onDone() # activate output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                                                                    <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                    <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                                                        <Choice value="Both" />
                                                                        <Choice value="Left" />
                                                                        <Choice value="Right" />
                                                                    </Parameter>
                                                                    <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                                                </Box>
                                                                <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 255, 255])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <color>#ffffff</color>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                                                </Box>
                                                                <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                                                                <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="3" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Reset Warm Up" id="4" localization="8" tooltip="" x="661" y="290">
                            <bitmap>media/images/box/movement/move_arm.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram scale="70.7107">
                                            <Box name="Number Edit" id="3" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="108" y="113">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <number>0</number>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                            </Box>
                                            <Box name="Set New User" id="8" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="312" y="94">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_new_user" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                    <Choice value="string" />
                                                    <Choice value="integer" />
                                                    <Choice value="float" />
                                                    <Choice value="boolean" />
                                                </Parameter>
                                                <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                            </Box>
                                            <Box name="Set Use Head" id="7" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="314" y="238">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_use_head" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                    <Choice value="string" />
                                                    <Choice value="integer" />
                                                    <Choice value="float" />
                                                    <Choice value="boolean" />
                                                </Parameter>
                                                <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                            </Box>
                                            <Box name="Number Edit (1)" id="1" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="108" y="243">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <number>0</number>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                            </Box>
                                            <Box name="Set Repeatings" id="5" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="307" y="376">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_count" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                    <Choice value="string" />
                                                    <Choice value="integer" />
                                                    <Choice value="float" />
                                                    <Choice value="boolean" />
                                                </Parameter>
                                                <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                            </Box>
                                            <Box name="Number Edit (2)" id="2" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="114" y="379">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <number>0</number>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                            </Box>
                                            <Box name="Set Max Repeatings" id="4" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="316" y="518">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_repeatings_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                    <Choice value="string" />
                                                    <Choice value="integer" />
                                                    <Choice value="float" />
                                                    <Choice value="boolean" />
                                                </Parameter>
                                                <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="10" default_value="0" custom_choice="0" tooltip="" id="7" />
                                            </Box>
                                            <Box name="Number Edit (3)" id="6" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="105" y="516">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(5)]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <number>5</number>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                            </Box>
                                            <Box name="Set Head First Time" id="9" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="319" y="646">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_use_head_first_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                    <Choice value="string" />
                                                    <Choice value="integer" />
                                                    <Choice value="float" />
                                                    <Choice value="boolean" />
                                                </Parameter>
                                                <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                            </Box>
                                            <Box name="Number Edit (4)" id="10" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="104" y="653">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <number>0</number>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                            </Box>
                                            <Box name="Set Hold Time" id="11" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="334" y="767">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                    <Choice value="string" />
                                                    <Choice value="integer" />
                                                    <Choice value="float" />
                                                    <Choice value="boolean" />
                                                </Parameter>
                                                <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                            </Box>
                                            <Box name="Number Edit (5)" id="12" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="118" y="774">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <number>0</number>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                            </Box>
                                            <Box name="Set Max Hold Time" id="13" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="322" y="880">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_hold_time_max" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                    <Choice value="string" />
                                                    <Choice value="integer" />
                                                    <Choice value="float" />
                                                    <Choice value="boolean" />
                                                </Parameter>
                                                <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="3" default_value="0" custom_choice="0" tooltip="" id="7" />
                                            </Box>
                                            <Box name="Number Edit (6)" id="14" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="119" y="882">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(3)]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <number>3</number>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                            </Box>
                                            <Link inputowner="8" indexofinput="2" outputowner="3" indexofoutput="3" />
                                            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="3" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="3" />
                                            <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="4" indexofinput="2" outputowner="6" indexofoutput="3" />
                                            <Link inputowner="9" indexofinput="2" outputowner="10" indexofoutput="3" />
                                            <Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="11" indexofinput="2" outputowner="12" indexofoutput="3" />
                                            <Link inputowner="12" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="14" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="13" indexofinput="2" outputowner="14" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Tactile Head" id="5" localization="8" tooltip="Detect touch on head tactile sensor." x="280" y="203">
                            <bitmap>media/images/box/sensors/tactileHead.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                            <Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                            <Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" />
                            <Output name="frontTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The front tactile head sensor was touched." id="8" />
                            <Output name="middleTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The middle tactile head sensor was touched." id="9" />
                            <Output name="rearTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The rear tactile head sensor was touched." id="10" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="If &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="260" y="17">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="256" y="119">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Box name="If &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="261" y="223">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="8" outputowner="1" indexofoutput="4" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="5" />
                                            <Link inputowner="0" indexofinput="9" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" />
                                            <Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                            <Resource name="Head-sequence" type="Lock" timeout="0" />
                        </Box>
                        <Box name="User Detection" id="9" localization="8" tooltip="" x="290" y="30">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Number Edit" id="3" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="301" y="256">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(1)]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <number>1</number>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                            </Box>
                                            <Box name="Set New User" id="8" localization="8" tooltip="Sets or gets database data. To set data stimulate with data input. Otherwise database value is returned." x="494" y="189">
                                                <bitmap>media/images/box/box-python-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import sys, os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        # import module
        framemanager = ALProxy("ALFrameManager")
        folderName = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../lib")
        if folderName not in sys.path:
            sys.path.append(folderName)
        import naodb

        # set data
        self.dbFile = os.path.join(framemanager.getBehaviorPath(self.behaviorId), "../physio.db")
        self.dbFile = "physio.db"
        self.dbTable = "physio_preferences"

        # create table if not exist
        sql = "CREATE TABLE IF NOT EXISTS " + self.dbTable + " (key TEXT PRIMARY KEY NOT NULL, value TEXT NOT NULL default '')"
        naodb.sqlQuery(self.dbFile, sql)

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, data):
        import naodb

        if data is None:
            # read database value
            sql = "SELECT key, value FROM " + self.dbTable + " WHERE key = '" + self.getParameter("Value") + "'"
            data = naodb.sqlQuery(self.dbFile, sql)

            if len(data) > 0 and len(data[0]) > 1 and str(data[0][0]) == self.getParameter("Value"):
                data = str(data[0][1])

                # convert data
                if self.getParameter("Type") == "string":
                    data = str(data)
                elif self.getParameter("Type") == "integer":
                    data = int(data)
                elif self.getParameter("Type") == "float":
                    data = float(data)
                elif self.getParameter("Type") == "boolean":
                    data = bool(data)

            else:
                data = self.getParameter("Default Value")
                self.logger.warn("Cannot convert " + str(data) + " to " + self.getParameter("Type") + ".\nUsed default value.")

        else:
            # convert data
            if self.getParameter("Type") == "string":
                data = str(data)
            elif self.getParameter("Type") == "integer":
                data = int(data)
            elif self.getParameter("Type") == "float":
                data = float(data)
            elif self.getParameter("Type") == "boolean":
                data = bool(data)

            # set database value
            sql = "REPLACE INTO " + self.dbTable + "(key, value) VALUES ('" + self.getParameter("Value") + "', '" + str(data) + "')"
            naodb.sqlQuery(self.dbFile, sql)

        self.onStopped(data)


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="Value" inherits_from_parent="0" content_type="3" value="physio_warmup_new_user" default_value="" custom_choice="0" tooltip="Value name to get or set data" id="5" />
                                                <Parameter name="Type" inherits_from_parent="0" content_type="3" value="integer" default_value="string" custom_choice="0" tooltip="" id="6">
                                                    <Choice value="string" />
                                                    <Choice value="integer" />
                                                    <Choice value="float" />
                                                    <Choice value="boolean" />
                                                </Parameter>
                                                <Parameter name="Default Value" inherits_from_parent="0" content_type="3" value="0" default_value="0" custom_choice="0" tooltip="" id="7" />
                                            </Box>
                                            <Box name="Face Reco." id="6" localization="8" tooltip="Detect people&apos;s face and recognize those which are known by the robot.&#x0A;&#x0A;Note: the robot needs to learn a face with the Learn Face box before he can recognize it." x="130" y="51">
                                                <bitmap>media/images/box/interaction/reco_face.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Input name="FaceDetected" type="0" type_size="1" nature="4" stm_value_name="FaceDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="5" />
                                                <Output name="onDetectedWithoutReco" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                <Output name="onRecognizedFaces" type="3" type_size="1" nature="2" inner="0" tooltip="Names of recognized faces. If several faces are recognized, they are sent one&#x0A;after an other on this output." id="7" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Reco. Det. Faces" id="1" localization="8" tooltip="Process face detection extractor data (FaceDetected) to extract the labels of&#x0A;recognized faces and notify when there is a face detected but not recognized.&#x0A;&#x0A;An output (either one or the other) is stimulated each time the number of&#x0A;recognized faces change." x="183" y="68">
                                                                    <bitmap>media/images/box/interaction/reco_face.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.timeFilteredResult = [];

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(len(p) > 0):
            if(len(p[1]) > 0): # just in case of the ALValue is in the wrong format
                # get the ALValue returned by the time filtered recognition:
                #    - [] when nothing new.
                #    - [4] when a face has been detected but not recognized during the first 8s.
                #    - [2, [faceName]] when one face has been recognized.
                #    - [3, [faceName1, faceName2, ...]] when several faces have been recognized.
                self.timeFilteredResult = p[1][len(p[1]) -1]
                if( len(self.timeFilteredResult) == 1 ):
                    # If a face has been detected for more than 8s but not recognized
                    if(self.timeFilteredResult[0] == 4):
                        self.onDetectWithoutReco()
                elif( len(self.timeFilteredResult) == 2 ):
                    # If one or several faces have been recognized
                    if(self.timeFilteredResult[0] in [2, 3]):
                        for s in self.timeFilteredResult[1]:
                            self.onRecognizedFace( s )

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input. It must be the&#x0A;FaceDetected extractor data." id="2" />
                                                                    <Output name="onRecognizedFace" type="3" type_size="1" nature="1" inner="0" tooltip="Name of recognized face. If several faces are recognized, they are sent one after an&#x0A;other on this output.&#x0A;&#x0A;Note: if it is the wrong face which has been recognized, you have 7s to rename&#x0A;it with the relearn function available on one of  Add/Del Faces sub-boxes (Learn Face&#x0A;box)." id="3" />
                                                                    <Output name="onDetectWithoutReco" type="1" type_size="1" nature="1" inner="0" tooltip="A face has been detected for more than 8s but has not been recognized. It means&#x0A;that the robot does not know this face but it would be a good idea to learn it." id="4" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="7" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="0" indexofinput="6" outputowner="1" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="Face Detection" id="7" localization="8" tooltip="Detect people&apos;s face and return the number of detected faces.&#x0A;&#x0A;Note: Detect even faces that are not registered in the faces database (that&#x0A;you can teach him with the Learn Face box)." x="130" y="182">
                                                <bitmap>media/images/box/interaction/face.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Input name="FaceDetected" type="0" type_size="1" nature="4" stm_value_name="FaceDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="5" />
                                                <Output name="numberOfFaces" type="2" type_size="1" nature="2" inner="0" tooltip="Number of detected faces. This output is stimulated each time the number of&#x0A;detected faces change." id="6" />
                                                <Output name="onNoFace" type="1" type_size="1" nature="2" inner="0" tooltip="No face is detected." id="7" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Count Det. Faces" id="3" localization="8" tooltip="Process face detection extractor data (FaceDetected) to count the number&#x0A;of detected faces and notify when there is no face detected.&#x0A;&#x0A;An output (either one or the other) is stimulated each time the number of&#x0A;detected faces change." x="174" y="71">
                                                                    <bitmap>media/images/box/interaction/reco_face.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nFacesDetected = -1

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(len(p) > 0):
            if(self.nFacesDetected != len(p[1]) -1): # an additional array has been placed at the end for time
                self.nFacesDetected = len(p[1]) -1  # filtered info and has to be substracted when counting faces
                if(self.nFacesDetected != 0):
                    self.onFaceDetected( self.nFacesDetected )
                else:
                    self.onNoFace()
        else:
            if(self.nFacesDetected != 0):
                self.nFacesDetected = 0
                self.onNoFace()

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input. It must be the&#x0A;FaceDetected extractor data." id="2" />
                                                                    <Output name="onFaceDetected" type="2" type_size="1" nature="1" inner="0" tooltip="Number of detected faces." id="3" />
                                                                    <Output name="onNoFace" type="1" type_size="1" nature="1" inner="0" tooltip="No face is detected." id="4" />
                                                                </Box>
                                                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="6" outputowner="3" indexofoutput="3" />
                                                                <Link inputowner="0" indexofinput="7" outputowner="3" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="Number Edit (1)" id="1" localization="8" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="304" y="139">
                                                <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped(0)]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <number>0</number>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                            </Box>
                                            <Link inputowner="8" indexofinput="2" outputowner="3" indexofoutput="3" />
                                            <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="7" />
                                            <Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="7" />
                                            <Link inputowner="8" indexofinput="2" outputowner="1" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="4" />
                        <Link inputowner="8" indexofinput="2" outputowner="5" indexofoutput="8" />
                        <Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="10" />
                        <Link inputowner="9" indexofinput="2" outputowner="3" indexofoutput="4" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
